@inherits Custom.Hybrid.RazorTyped
@using ToSic.Razor.Blade;

@{
  var accordion = GetCode("./Accordion.cs").Setup(MyModel.Code("Sys"), MyModel.String("Variant", required: false));
  var tutPage = AsItems(App.Data["TutorialPage"]).FirstOrDefault(i => i.String("NameId") == MyModel.String("NameId"));
}

@if (tutPage != null) {
  <div @Kit.Toolbar.Default(tutPage)>
    <h1>@Html.Raw(tutPage.String("Title", fallback: "no title", scrubHtml: "p"))</h1>
    @tutPage.Html("Intro")
    @tutPage.Html("IntroMore" + (accordion.IsTyped ? "Typed" : "Dyn"))
    @if (tutPage.IsNotEmpty("Note")) {
      <div class="alert alert-warning">
        @tutPage.Html("Note")
      </div>
    }
  </div>
  

  if (tutPage.IsNotEmpty("Accordions")) {
    var accords = tutPage.Children("Accordions");

    // Check if any of the tutorials has variants - if yes, show the variant selector
    var showVariantSelector = accords.Any(a => a.Bool("HasVariants"));
    if (showVariantSelector) {
      @Html.Partial("./Variant Selector.cshtml", new { Variant = accordion.Variant })
    }


    foreach (var accSpecs in accords) {
      @Html.Partial("./Accordion One.cshtml", new { accordion, AccordionSpecs = accSpecs, skipPageTools = true })
    }
  } else {
    <text>
      Accordion list is empty.
      Use Toolbar to edit
    </text>
  }
} else if (MyUser.IsSystemAdmin) {
  <div class="alert alert-danger" @Kit.Toolbar.Empty().New("TutorialPage", prefill: new {
    NameId = MyModel.String("NameId")
  })>
    The Accordion LIST <strong>@MyModel.String("NameId")</strong> was not found.
    <br />
    This is something you probably want to create next.
    Use the Toolbar to create.
  </div>
}

<p>&nbsp;</p>