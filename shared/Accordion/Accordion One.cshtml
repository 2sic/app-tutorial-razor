@inherits Custom.Hybrid.RazorTyped
@using ToSic.Razor.Blade;

@* Bootstrap 5 Accordions *@
@{
  var accSpecs = AsItems(App.Data["TutAccordion"]).FirstOrDefault(i => i.String("NameId") == MyModel.String("NameId"));
  var accordion = GetCode("./Accordion.cs").Setup(MyModel.Code("Sys"), MyModel.String("Variant", required: false), item: accSpecs);
}

@if (accSpecs != null) {
  if (accSpecs.Bool("HasVariants")) {
    <div class="alert alert-info">
      The samples can differ based on your Razor base class. <br>
      @if (accordion.Variant == "typed") {
        <a class="btn btn-success" href='#'>
          Selected: Typed (Razor16+)
        </a>
        <a class="btn btn-primary"
          href='@Link.To(parameters: MyPage.Parameters.Set("variant", "dynamic"))'>
          Switch to Dynamic (Razor14 or below)
        </a>
      } else {
        <br>
        <a class="btn btn-primary"
          href='@Link.To(parameters: MyPage.Parameters.Set("variant", "typed"))'>
          Switch to Typed (Razor16+)
        </a>
        <a class="btn btn-success" href='#'>
          Selected: Dynamic (Razor14 or below)
        </a>
      }
    </div>
  }
  @accordion.Start(accSpecs)
    @Html.Partial("./Accordion Sections.cshtml", new { accordion } )
  @accordion.End()
} else if (MyUser.IsSystemAdmin) {
  <div class="alert alert-danger" @Kit.Toolbar.Empty().New("TutAccordion", prefill: new {
    NameId = MyModel.String("NameId")
  })>
    The Accordion Set <strong>@MyModel.String("NameId")</strong> was not found.
    <br />
    This is something you probably want to create next.
    Use the Toolbar to create.
  </div>
}

@* Add a padding - if ever this may be impractical, then we can change it to be controlled by a parameter *@
<p>&nbsp;</p>
