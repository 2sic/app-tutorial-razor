@inherits Custom.Hybrid.RazorTyped
@using ToSic.Razor.Blade;
@{
  // Check for Recursions, to prevent infinite loops!
  var recursions = MyModel.Int("Recursions", required: false, fallback: 0) + 1;
  if (recursions > 5) {
    throw new Exception("Recursion limit reached");
  }
}

@* Bootstrap 5 Accordions *@
@{
  // Get the accordion specs - Either the "Page" or the Section inside the page
  var accSpecs = MyModel.Item("AccordionSpecs", required: false)
    ?? AsItems(App.Data["TutorialGroup"]).FirstOrDefault(i => i.String("NameId") == MyModel.String("NameId"));

    // Reuse existing Accordion code or generate new
    var accordion = MyModel.Code("Accordion", required: false)
      ?? GetCode("./Accordion.cs").Setup(MyModel.Code("Sys"), MyModel.String("Variant", required: false), item: accSpecs);
}

@if (accSpecs != null) {
  // Check if this is a "Page" - WIP
  if (accSpecs.IsNotEmpty("Accordions")) {
    var tutPage = accSpecs;
    @Html.Partial("./Accordion Multi.cshtml", new { TutorialGroup = accSpecs, recursions, accordion });
    return;
  } else {
    // Skip Variant Selector if it was already done before
    // If we have variants, and the caller didn't explicitly say to skip page tools, then show them
    var skipPageTools = MyModel.Bool("SkipPageTools", required: false);
    if (!skipPageTools && accSpecs.Bool("HasVariants")) {
      @Html.Partial("./Variant Selector.cshtml", new { Current = accordion.Variant, Variants = null as string })
    }

    // Show each accordion with all sections
    @accordion.Start(accSpecs)
      @Html.Partial("./Notes.cshtml", new { Item = accSpecs, recursions })
      @Html.Partial("./Accordion Sections.cshtml", new { accordion, recursions } )
    @accordion.End()
  }
  // If it's empty, show info / toolbar to admin only
} else if (MyUser.IsSystemAdmin) {
  <div class="alert alert-danger" @Kit.Toolbar.Empty().New("TutorialGroup", prefill: new {
    NameId = MyModel.String("NameId")
  })>
    The Accordion Set <strong>@MyModel.String("NameId")</strong> was not found.
    <br />
    This is something you probably want to create next.
    Use the Toolbar to create.
  </div>
}

@* Add a padding - if ever this may be impractical, then we can change it to be controlled by a parameter *@
<p>&nbsp;</p>
