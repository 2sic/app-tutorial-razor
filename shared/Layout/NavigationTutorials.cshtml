@inherits Custom.Hybrid.Razor14
@using System.Linq;
@using Dynlist = System.Collections.Generic.IEnumerable<dynamic>;
@{
  // Expect the calling page to give us it's Sys object
  // which contains a lot of shared functionality
  var Sys = DynamicModel.Sys;
}
@{
  var NavPrevNext = GetCode("NavigationPrevNext.cs").Init(Sys, CmsContext.View);

  var currentView = CmsContext.View;

  // Enable Fa5 for icons
  Kit.Page.Activate("FontAwesome5");

  // Get current datasets
  var viewMd = NavPrevNext.TryGetViewMd(currentView);
  var sortedTutorialSections = (AsList(App.Data["Tutorial"]).Last().Sections as Dynlist).ToList();
  var tutorialSection = AsList(sortedTutorialSections)
    .Where(section => (section.Views as Dynlist)
      .Any(view => view.EntityId == currentView.Id))
    .FirstOrDefault() ?? null;
  var tutorialSectionIndex = tutorialSection != null ? sortedTutorialSections.FindIndex(section => section.EntityId == tutorialSection.EntityId) : 0;

  if (tutorialSection == null) {
    return;
  }

  // Get List information
  var viewList = (tutorialSection.Views as Dynlist).ToList();
  var currentIndex = viewList.FindIndex(view => view.EntityId == currentView.Id);
  var homeTarget = "#" + tutorialSection.NameId;

  // Previous Tutorial
  var previousTutorial = currentIndex > 0 
    ? viewList[currentIndex - 1] 
    : tutorialSectionIndex > 0 
      ? (sortedTutorialSections[tutorialSectionIndex - 1].Views as Dynlist).Last() 
      : null;

  // Previous Tutorial Metadata
  var previousTutorialMd = NavPrevNext.TryGetViewMd(previousTutorial);
  var previousTutorialTarget = previousTutorialMd != null 
    ? Sys.GetTargetUrl(previousTutorial.ViewNameInUrl.Replace("/.*", "")) 
    : homeTarget;

  // Next Tutorial
  var nextTutorial = currentIndex < viewList.Count() - 1 
    ? viewList[currentIndex + 1] 
    : tutorialSectionIndex < sortedTutorialSections.Count() - 1
      ? (sortedTutorialSections[tutorialSectionIndex + 1].Views as Dynlist).First() 
      : null;

  // Next Tutorial Metadata
  var nextTutorialMd = NavPrevNext.TryGetViewMd(nextTutorial);
  var nextTutorialTarget = nextTutorialMd != null 
    ? Sys.GetTargetUrl(nextTutorial.ViewNameInUrl.Replace("/.*", ""))
    : homeTarget;

  <div class="alert alert-dark container-fluid">
    <div class="row justify-content-between">
      <div class="col-4 text-truncate">
        <a href="@Link.To(parameters: previousTutorialTarget)" class="row">
          
          <div class="col-auto">
            <i class="fas fa-chevron-left"></i>
          </div>
          <div class="col text-truncate">
            @(previousTutorial != null ? Html.Raw(Kit.Scrub.All(previousTutorialMd.LinkTitle)) : "Home")
          </div>
        </a>
      </div>
      <div class="col-4 text-center text-truncate">
        <strong>#@(currentIndex + 1) @Html.Raw(Kit.Scrub.All(viewMd.LinkTitle)) </strong>
      </div>
      <div class="col-4 text-end text-right">
        <a href="@Link.To(parameters: nextTutorialTarget)" class="row">
          <div class="col text-truncate">
            @(nextTutorial != null ? Html.Raw(Kit.Scrub.All(nextTutorialMd.LinkTitle)) : "Home")
          </div>
          <div class="col-auto">
            <i class="fas fa-chevron-right"></i>
          </div>
        </a>
      </div>
    </div>
  </div>
}
