@inherits Custom.Hybrid.Razor12
<hide>
@Html.Partial("_header.cshtml")
</hide>
<trim>
<h3>Show a variable</h3>
<p>This uses the basic <code>@@variableName</code> syntax. This will result in encoding html, so tags in that variable will be shown as html-source.</p>
</trim>
@{
  var normalText = "this is text, it doesn't have tags";
  var htmlText = "this string <em>has</em> html <strong>tags</strong>";
}
<ul>
  <li>@normalText</li>
  <li>@htmlText</li>
</ul>

<trim>
<hr>
<h2>Encode using <code>@@Html.Raw(...)</code> </h2>
</trim>
<ul>
  <li>@Html.Raw(normalText)</li>
  <li>@Html.Raw(htmlText)</li>
</ul>

<hr>
<h2>Add "uncontrolled" html using <code>@@:...</code></h2>
<p>
  Sometimes you need to conditionally add tags, in which case Razor cannot verify that open/close of tags is correct.
  This would normally throw an error. so you need <code>@@:</code>. 
</p>
<div>
  @{ var makeBold = new System.Random().NextDouble() > 0.5; }
  @if (makeBold) { 
    @:<strong> 
  }
    This is randomly bold or not, depending on a random event. If it's bold, you'll see a <code>strong</code> tag around it, otherwise not.
  @if (makeBold) { 
    @:</strong>
  }
</div>



<hr>
<h2>Reuse a Snippet using <code>@@helper</code> (Dnn ☢️ only)</h2>
@{#if NETCOREAPP}
  @Html.Partial("../shared/_MessageOqtaneDisabled.cshtml")
@{#else}
  @Html.Partial("_000-html.dnn.helper.cshtml")
@{#endif}

<hide>

@Html.Partial("../shared/_source-code.cshtml", new { Path }) 

@Html.Partial("../shared/_source-code.cshtml", new { 
  Path,
  File = "_000-html.dnn.helper.cshtml"
}) 

</hide>