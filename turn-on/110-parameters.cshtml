@using ToSic.Razor.Blade;
@inherits Custom.Hybrid.Razor14
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys })
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
      <h2>Pass function parameters with turnOn</h2>
      <p>In this page turnOn passes parameters to a JavaScript function. The passed parameters then get deconstructed and used for DOM manipulation.</p>
      <br>
      In this tutorial you'll learn how to:
      <ul>
        <li>
          Pass parameters to JavaScript functions using turnOn.
        </li>
        <li>
          Deconstruct passed parameters 
        </li>
      </ul>
      Look at the text below to see the effect. 
    </div>
  </div>


@Sys.SourceCode.ResultAndSnippetStart("turn-on-demo", "Source of parameters-js")
  <div id="turn-on-example">
    turnOn Example 1 hasn't started yet.
  </div>
  <div id="turn-on-example-deconstruct">
    turnOn Example 2 hasn't started yet.
  </div>

  @* Passes the parameters Hello for greeting and World for name in a JSON format and executes the window.turnOnTutorial110.init function *@

   @* This tutorial uses turnOn, see turnOn tutorials *@
  @{
    var data = new {
      greeting = "Hello",
      name = "World"
    };

      var dataDemo = new {
      greeting = "Hello",
      name = "Moon"
    };
  }
  @Kit.Page.TurnOn("window.turnOnTutorial110.init()", data: data)
  @Kit.Page.TurnOn("window.turnOnTutorial110.demoDeconstruct()", data: dataDemo)

  <script src="@CmsContext.View.Path/110-parameters.js" @Kit.Page.AssetAttributes()></script>

@Sys.SourceCode.ResultEnd("file:110-parameters.js")


@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })