<hide>
@RenderPage("shared/_title.cshtml", new { Title = "Razor Tutorial - Home"})
</hide>

<trim>
<h2>How to use this Tutorial</h2>
<p>
  Below you'll find a list of topics this tutorial covers. The easiest way to work with it is to look at an example, then look at the code shown below the examples. You can also modify the source files and see what happens :)
</p>
</trim>

<hr>
<h2>Razor Basics</h2>

<ol>
  @TutorialLink("Very Basics", "basics", "Basic use of Razor with variables, loops, conditions etc.")
  @TutorialLink("Working with HTML", "html", "Learn the difference of showing variables with @variable and @Html.Raw(variable)")
  @TutorialLink("Reuse templates and code", "reuse", "You can place shared templates and functions into separate files.")
</ol>

<hr>
<h2>Working with Content</h2>
<p>In most cases a template will run in a context - so something prepared data for the template, which should now be visualized. These examples assume you're working with 2sxc, which let's editors work with content - and your template only needs to visualize it.</p>

<ol>
  @TutorialLink("Visualize current Content", "content", "Show content which was entered for this module")
  <li>todo: data</li>
</ol>


<hr>
<h2>Advanced Tutorials</h2>
<ol>
  @TutorialLink("LINQ Examples", "linq", "The following examples show how to use LINQ (Language INtegrated Query) to sort, filter and group data. This is for quick work in your views - for more extensive querying, we recommend the Visual Query Designer. ")
</ol>



@* hide *@
@* anything below this is not shown in the page view-source, as it's internal "plumbing" and not helpful for the tutorial *@


@helper TutorialLink(string label, string target, string description) {
  <li>
    <strong>
    <a href='@Link.To(parameters: target + "/home")'>
      @label
    </a>
    </strong><br>
    @description
  </li>
}