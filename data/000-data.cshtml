@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;
@using System.Linq;
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys }) 
</hide>


<h2>Working with Data</h2>
<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
    <p>If you want to work with <strong>data</strong> (like from a database) instead of <strong>@Sys.TutLink("content", "content")</strong> (which are data items assigned to one instance) you need to get it from somewhere and then loop through it. Typical data comes from:</p>

    <ul>
      <li>the current App, using <code>App.Data[...]</code></li>
      <li>a query in the App, using <code>App.Query[...]</code></li>
      <li>a SQL database - either through an <code>App.Query</code>, from a <code>DataSource</code> or from a <code>SqlReader</code></li>
      <li>a CSV file - either through an <code>App.Query</code>, from a <code>DataSource</code> or from your own code</li>
      <li>DNN objects like the users - either through an <code>App.Query</code>, from a <code>DataSource</code>, from DNN-objects or from your own code</li>
      <li>a JSON or XML file - usually loaded from your own code</li>
      <li>a WebService - usually loaded from your own code</li>
    </ul>
    <p>
      Once you have the data, you will usually want to loop-and-show, which is easiest using <code>dynamic</code> objects, so you can just type things like <code>@@Content.FirstName</code> to show the properties. 
    </p>
  </div>
</div>
