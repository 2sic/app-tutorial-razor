@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;
@using System.Linq;
@using System.Configuration
@using System.Data
@using System.Data.SqlClient
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("_header.cshtml", new { Sys = Sys }) 
  @{ var fancybox = CreateInstance("../shared/Fancybox.cs");
    var width = 200;
    var height = 200;
  }
</hide>


<trim>
<div class="row mb-5">
  <div class="col-lg-7">
    <h2>The top 10 files found in this portal as returned from DB</h2>
    <p>
      This example queries the DNN SQL for the files using a <code>DataTable</code> object.
    </p>
  </div>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
</div>

</trim>

@Sys.SourceCode.SnippetInitStart("intro")
  @{
      // load the sql connection name from Web.Config
      // the default connection string for DNN is SiteSqlServer
      var conString = ConfigurationManager.ConnectionStrings["SiteSqlServer"].ToString();

      // You should always write parameters using the @-syntaxt,
      // and never write them directly into the SQL using string-concatenation
      // to protect yourself from SQL injection attacks
      const string sqlCommand = "Select Top 10 * from Files Where PortalId = @PortalId";

      // create an adapter object, tell it what to do, and load results into fileTable
      var adapter = new SqlDataAdapter(sqlCommand, conString);
      adapter.SelectCommand.Parameters.AddWithValue("@PortalId", CmsContext.Site.Id);
      var fileTable = new DataTable();
      adapter.Fill(fileTable);
    }
@Sys.SourceCode.SnippetInitEnd()


@Sys.SourceCode.SnippetInlineStart("sql-rows")
  <ol>
    @foreach (DataRow row in fileTable.Rows)
    {
      <li>@row["FileName"]</li>
    }
  </ol>
@Sys.SourceCode.SnippetInlineEnd()


<trim>
<h2>The top 10 files found in this portal with reverse sorting</h2>
</trim>

@Sys.SourceCode.SnippetInlineStart("sql-reverse")
  @{
    // This applies a default-view with more parameters
    fileTable.DefaultView.Sort = "FileName DESC";
  }
  <ol>
    @foreach (DataRow row in fileTable.DefaultView.ToTable().Rows)
    {
      <li>@row["FileName"]</li>
    }
  </ol>
@Sys.SourceCode.SnippetInlineEnd()


@Sys.PageParts.FooterWithSource()