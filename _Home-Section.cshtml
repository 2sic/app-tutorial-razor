@inherits Custom.Hybrid.Razor14
@{
  var tutorialSet = DynamicModel.TutorialSet;
  if (tutorialSet == null) {
    return;
  }


  var Sys = CreateInstance("shared/Helpers.cs");
  var viewMdType = Sys.TutViewMetadataType as string;
  var unknownViewMetadata = AsDynamic(new {
    LinkTitle = "Todo",
    LinkTeaser = ""
  });

  var featureLogoFallback = App.Path + "/app-icon.png";
  var featureLogoPath = tutorialSet.FeatureLogo != "" && tutorialSet.FeatureLogo != null 
    ? tutorialSet.FeatureLogo 
    : featureLogoFallback;

  if (featureLogoPath != featureLogoFallback && featureLogoPath.IndexOf("/") == -1) {
    featureLogoPath = App.Path + "/img/assets/" + featureLogoPath;
  }
}

@* Show a heading section to introduce a new main topic *@
@{
  var category = AsList(tutorialSet.Category as object).FirstOrDefault();
}
@if (category != null) {
  <div @Edit.TagToolbar(category)>
    <br>
    <h2>@category.Title</h2>
    <br>
  </div>
}

@if (DynamicModel.IsSubSection == true) {
  <hr>
}

<div class='tutorial-item (DynamicModel.IsSubSection == true ? "sub-section" : "")'>
  <div class='tutorial-title' data-accordion-parent="@tutorialSet.NameId">
    <div class="row">
      <div class="col-auto">
        <div class="icon-wrapper"><img loading="lazy" class="img-fluid" src='@featureLogoPath'></div>
      </div>
      <div class="ml-3 col" @Edit.TagToolbar(tutorialSet)>
        <h2 class='co-no-icon'>@Html.Raw(tutorialSet.Title)</h2>
        @Html.Raw(tutorialSet.Introduction)
      </div>
    </div>
    @* Up / Down arrows as SVG - hidden by default, become visible based on CSS *@
    <img src="@App.Path/assets/svg/arrow-up.svg" class="fa-chevron-up">
    <img src="@App.Path/assets/svg/arrow-down.svg" class="fa-chevron-down">
  </div>
  <div class='tutorial-group pt-3' data-accordion-child="@tutorialSet.NameId">
    <ol>
      @foreach (var tutView in AsList(tutorialSet.Views ?? tutorialSet.Tutorials)) {
        // Used for wip section
        if (AsDynamic(tutView).Title != null) {
          <li>@AsDynamic(tutView).Title</li>
          continue;
        }

        var urlPattern = tutView.ViewNameInUrl.Replace("/.*", "");
        var viewMetadata = tutView.Metadata;
        var viewMd = AsList(viewMetadata.OfType(viewMdType) as object).FirstOrDefault()
          ?? unknownViewMetadata;

        var tutLink = Sys.TutorialViewLink(
          viewMd.LinkTitle.Replace("<p>", ""). Replace("</p>", ""),
          urlPattern,
          viewMd.LinkTeaser, // "Basics of showing images in HTML and understand JPG vs. PNG vs. WebP.",
          viewMd.LinkEmphasis,
          deprecated: viewMd.Deprecated == true
        );
        // Metadata with new toolbar services
        tutLink.Attr(Edit.TagToolbar(Kit.Toolbar.Metadata(tutView, viewMdType)));
        @tutLink
      }
    </ol>
  </div>
</div>

@* Show All Sub Sections *@
@foreach (var section in AsList(DynamicModel.SubSections)) {
  @Html.Partial("_Home-Section.cshtml", new { TutorialSet = section, IsSubSection = true } )
}