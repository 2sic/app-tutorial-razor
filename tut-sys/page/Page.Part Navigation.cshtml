@inherits AppCode.Razor.AppRazor<NavigationModel>
@using System.Linq
@using ToSic.Sxc.Data
@using AppCode.Data
@using AppCode.TutorialSystem.Razor
@{
  // Enable Fa5 for icons
  Kit.Page.Activate("FontAwesome5");

  if (Model.Section == null) {
    return;
  }

  // Expect the calling page to give us it's Sys object
  // which contains a lot of shared functionality
  var Sys = Model.Sys;
  var currentSection = Model.Section;
  var tutPage = Model.TutGroup;

  // Get current datasets
  var sortedTutorialSections = App.Data.GetAll<TutorialSequence>().First().Sections.ToList();
  var sectionIndex = currentSection != null
    ? sortedTutorialSections.FindIndex(section => section.Id == currentSection.Id)
    : 0;


  // Get List information
  var tutGroups = currentSection.TutorialGroups.ToList();
  var currentIndex = tutGroups.FindIndex(tg => tg.Id == tutPage.Id);
  var homeTarget = Link.To(parameters: MyPage.Parameters.Remove("tut")) + "#" + currentSection.NameId;

  // Previous Tutorial
  var prev = currentIndex > 0 
    ? tutGroups[currentIndex - 1] 
    : sectionIndex > 0 
      ? sortedTutorialSections[sectionIndex - 1].Children("TutorialGroups").LastOrDefault() 
      : null;

  // Previous Tutorial Metadata
  var previousTutorialTarget = TutLinks.TutPageUrl(prev) ?? homeTarget;

  // Next Tutorial
  var next = currentIndex < tutGroups.Count() - 1 
    ? tutGroups[currentIndex + 1] 
    : sectionIndex < sortedTutorialSections.Count() - 1
      ? sortedTutorialSections[sectionIndex + 1].Children("TutorialGroups").FirstOrDefault() 
      : null;


  // Next Tutorial Metadata
  var nextTutorialTarget = TutLinks.TutPageUrl(next) ?? homeTarget;
}
<div class="alert alert-dark container-fluid">
  <div class="row justify-content-between">

    @* Link to Previous *@
    <div class="col-4 text-truncate">
      <a href="@previousTutorialTarget" class="row">
        <div class="col-auto">
          <i class="fas fa-chevron-left"></i>
        </div>
        <div class="col text-truncate">
          @(Html.Raw(prev != null ? prev.String(prev.IsNotEmpty("LinkTitle") ? "LinkTitle" : "Title", scrubHtml: true) : "Home"))
        </div>
      </a>
    </div>

    @* Current Tutorial Title *@
    <div class="col-4 text-center text-truncate">
      <strong>
        #@(currentIndex + 1) @Html.Raw(tutPage.String(tutPage.IsNotEmpty("LinkTitle") ? "LinkTitle" : "Title", scrubHtml: true))
      </strong>
    </div>

    @* Link to Next *@
    <div class="col-4 text-end text-right">
      <a href="@nextTutorialTarget" class="row">
        <div class="col text-truncate">
          @(Html.Raw(next != null ? next.String(next.IsNotEmpty("LinkTitle") ? "LinkTitle" : "Title", scrubHtml: true): "Home"))
        </div>
        <div class="col-auto">
          <i class="fas fa-chevron-right"></i>
        </div>
      </a>
    </div>
  </div>
</div>
