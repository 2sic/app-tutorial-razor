@inherits AppCode.Razor.AppRazor
@using ToSic.Razor.Blade
@using AppCode.Data
@using AppCode.TutorialSystem.Razor
@using AppCode.Tutorial
@* Catch invalid links, wherever they come from *@
@{
  // Background: for some reasons we seem to have links which drop the "/tut" and a lot of xyz=tut - which is the reverse of what's expected.
  // We assume that this happens because somewhere a link goes back one path, and then adds parameters.
  // So DNN will renumber the url-parameters incorrectly.
  // These will land here, and that's bad.
  // We were getting loads of links like /dnn-tutorials/en/razor?page-icons&code-functions=tut&datasources-dynamic=tut&doc=content&img=tut&img-picture=tut&items=tut&page-icons=tut
  // Overwhelming the live system / making it slow.
  // So the goal is to catch any links which have a value "tut" but are not supposed to be here.
  if (MyPage.Parameters.Any(p => p.Value == "tut")) {
    <h4>Sorry, the link which brought you here is broken.</h4>
    <p>
      Tutorial pages should not have the URL parameters of the current page.
      <br>
      You can always start over on <a href="@Link.To()">the tutorial home</a>.
    </p>
    @Kit.Page.SetHttpStatus(404);
    return;
  }
}
@{
  var myParams = MyPage.Parameters;
  
  // This Razor is called with a parameter like tut=home
  var tutIdFromUrl = myParams.String("tut");
  var tutIdWithPage = tutIdFromUrl + "-page";

  var allGroups = App.Data.GetAll<TutorialGroup>().ToList();
  var tutPage = allGroups.FirstOrDefault(i => i.NameId == tutIdWithPage)
    ?? allGroups.FirstOrDefault(i => i.NameId == tutIdFromUrl);

  if (tutPage == null) {
    <h4>Sorry, the tutorial page '@tutIdFromUrl' was not found</h4>
    @Kit.Page.SetHttpStatus(404);
    return;
  }

  @if (!tutPage.IsPage) {
    <h4>Sorry, @tutIdFromUrl is not a tutorial page</h4>
    @Kit.Page.SetHttpStatus(404);
    return;
  }
}
@{
  // Find the parent, which has Segment Title, Link, etc.
  var section = tutPage.Parent<TutorialSection>();

  var headNavData = new NavigationModel {
    Sys = Sys,
    Section = section,
    TutGroup = tutPage
  };

  SetOpenGraph(tutPage);
}
@* Note that the data-enhance-nav="false" is for Oqtane 5.1.2 which has major problems loading JS - ask @iJungleboy *@
<div data-enhance-nav="false">
  @Html.Partial("./Page.Part Header.cshtml", headNavData)

  @* Get the toolbar for: < previous | # Current | Next > *@
  @Html.Partial("./Page.Part Navigation.cshtml", headNavData)


  @Html.Partial("./Accordion Entry.cshtml", new AccordionOneModel { Sys = Sys, TutPage = tutPage, NameId = tutIdWithPage })

  @* Footer *@
  @* Get the toolbar for: < previous | # Current | Next > *@
  @Html.Partial("./Page.Part Navigation.cshtml", headNavData)
</div>
