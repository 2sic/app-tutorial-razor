@inherits AppCode.Razor.AppRazor<AccordionMultiModel>
@using ToSic.Razor.Blade
@using AppCode.Data
@using AppCode.Razor
@{
  // Check for Recursions, to prevent infinite loops!
  var recursions = Model.Recursions + 1; 
  if (recursions > 5) {
    throw new Exception("Recursion limit reached");
  }

  var accordion = Model.Accordion;
  var tutGroup = Model.TutorialGroup;
}

@Html.Partial("../snippets/Snippet Group Intro.cshtml", new SnippetIntroModel { Accordion = accordion, TutorialGroup = tutGroup })

@if (tutGroup.IsNotEmpty("Accordions")) {
  // Check if any of the tutorials has variants - if yes, show the variant selector
  var showVariantSelector = tutGroup.HasVariants 
    ? tutGroup 
    : tutGroup.Accordions.FirstOrDefault(a => a.HasVariants);

  if (showVariantSelector != null) {
    @Html.Partial("./Variant Selector.cshtml", new VariantSelectorModel {
      Current = accordion.Variant,
      Variants = showVariantSelector.Variants
    })
  }

  // Show each accordions one-by-one
  foreach (var accSpecs in tutGroup.Accordions) {
    @Html.Partial("./Section Block.cshtml", new SectionBlockModel {
      Sys = Model.Sys,
      Accordion = accordion,
      TutorialGroup = accSpecs,
      SkipPageTools = true,
      Recursions = recursions
    })
  }
} else {
  <div>
    Accordion list is empty.
    This is not expected, as the Multi-View should only be loaded when there are accordions.
    Use Toolbar to edit
  </div>
}

<p>&nbsp;</p>