@inherits Custom.Hybrid.RazorTyped
@using ToSic.Razor.Blade;
@{
  var Sys = GetCode("../Sys.cs").Init(this);

  // The accordion is an external helper file, so we must treat it as dyn-amic
  var acc = MyModel.Code("Accordion");
}
@foreach (var acs in acc.Sections(Path, backtrack: "../..")) {
  var item = AsItem(acs.Item as object);
  var runCode = item.IsEmpty("Formula");
  var codeFile = runCode ? acs.SectionFile as string : "ignore";
  if (codeFile != null) {
    @acs.Start()
      // Check if the file has it's own snip.Start/snip.End
      // in which case we don't wrap it here, as the file will do the wrapping
      // this is for more complex samples, which also generate contents for the tabs
      var containsSnipCode = runCode && Sys.SourceCode.FileHandler.FileContainsSnipCode(acs.SectionFile);
      var snip = Sys.SourceCode.SnipFromItem(item: item, file: codeFile);
      if (containsSnipCode) {
        @Html.Partial(codeFile, new { item, SnippetSection = snip, Tutorial = snip })
      } else {
        @snip.SnipStart()
          if (runCode) {
            @Html.Partial(codeFile, new { item, SnippetSection = snip, Tutorial = snip })
          }
        @snip.SnipEnd()
      }

    @acs.End()
  } else if (MyUser.IsSystemAdmin) {
    <div @Kit.Toolbar.Empty(item).Edit().New()>
      SysUserOnly: This section doesn't exist: <strong>@acs.TutorialId</strong> in <em>@acc.Variant</em>
    </div>
  } else {
    <!-- this section '@acs.TutorialId' doesn't exist -->
  }
}
