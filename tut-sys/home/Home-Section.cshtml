@inherits AppCode.Razor.AppRazor
@using ToSic.Razor.Blade
@using AppCode.Data
@{
  var tutorialSet = As<TutorialSection>(MyModel.Item("TutorialSet"));
  if (tutorialSet == null) { return; }

  var featureLogoPath = tutorialSet.IsNotEmpty("FeatureSet.Icon")
    ? tutorialSet.FeatureSet.Icon
    : App.Folder.Url + "/app-icon.png";

  var nameId = tutorialSet.Attribute("NameId");
  var category = tutorialSet.Category;
}

<div class='tutorial-item'>
  <div class='tutorial-title' data-accordion-parent='@nameId'>
    <div class="row">
      <div class="col-auto">
        <div class="icon-wrapper"><img loading="lazy" class="img-fluid" src='@featureLogoPath'></div>
      </div>
      <div class="ml-3 col" @Kit.Edit.TagToolbar(tutorialSet)>
        <h2 class='co-no-icon'>@tutorialSet.Html("Title")</h2>
        @tutorialSet.Html("Introduction")
      </div>
    </div>
    @* Up / Down arrows as SVG - hidden by default, become visible based on CSS *@
    <img loading="lazy" src="@App.Folder.Url/assets/svg/arrow-up.svg" class="fa-chevron-up">
    <img loading="lazy" src="@App.Folder.Url/assets/svg/arrow-down.svg" class="fa-chevron-down">
  </div>
  <div class='tutorial-group pt-3' data-accordion-child="@nameId">
    @* New Setup with TutorialGroup *@
    @if (tutorialSet.IsNotEmpty("TutorialGroups")) {
      <ol>
        @foreach (var tutGrp in tutorialSet.TutorialGroups) {
          @TutLinks.TutPageLink(tutGrp)
        }
      </ol>
    }
  </div>
</div>

<hr>