@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;
@using System.Linq;
@using ToSic.Eav.DataSources;
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @{ dynamic snip = null; }
  @Html.Partial("header.cshtml", new { Sys = Sys }) 
</hide>


<h2>Custom Dynamic DataSources - Process In-Data</h2>
<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
    <p>
      DataSources be attached together.
      This means that you can create a DataSource which takes one or more DataSources as input.
    </p>

  </div>
</div>

<trim>
  <h2>Keep Only Odd IDs</h2>
  <p>
    This example has a DataSource which receives data from an <em>upstream</em> source.
    The upstream source is the list of all authors in this App.
    Our DataSource will then filter this list, and only keep the authors with an odd ID.
  </p>
</trim>

@* @Sys.SourceCode.ResultStart("keepOdd", "KeepOdd.cs") *@
@((snip = Sys.SourceCode.TabsWithSnippet(tabs: "file:../DataSources/KeepOdd.cs")).SnipStart())
  @{
    // Get the stream of all authors
    var authors = App.Data["Persons"];
    // Create the Dynamic DataSource "KeepOdd" and attach the authors to it
    var keepOdd = Kit.Data.GetSource(name: "KeepOdd", attach: authors);
  }
  <h3>Data from the KeepOdd DataSource (@keepOdd.List.Count())</h3>
  <ul>
    @foreach (var item in AsList(keepOdd)) {
      <li>
        <strong>@item.EntityTitle</strong> (ID: @item.EntityId)
      </li>
    }
  </ul>
@snip.SnipEnd()
@* @Sys.SourceCode.ResultEnd("file:../DataSources/KeepOdd.cs") *@

<trim>
  <h2>Error Handling if No In</h2>
  <p>
    If your DataSource requires attached data (<code>In</code>) you may get hard-to-debug errors.
    Because of this, the sample also has error handling for this. 
    The following code uses the <code>KeepOdd</code> but <em>forgets</em> to attach the in.
  </p>
</trim>

@* @Sys.SourceCode.ResultStart("keepOdd-errors", "KeepOdd.cs") *@
@((snip = Sys.SourceCode.TabsWithSnippet(tabs: "file:../DataSources/KeepOdd.cs")).SnipStart())
  @{
    // Create the Dynamic DataSource "KeepOdd" and forget to attach the In
    keepOdd = Kit.Data.GetSource(name: "KeepOdd");
  }
  <h3>Data from the KeepOdd DataSource (@keepOdd.List.Count())</h3>
  <ul>
    @foreach (var item in AsList(keepOdd)) {
      <li>
        <strong>@item.EntityTitle</strong> (ID: @item.EntityId)
        <br>
        <strong>Message: </strong>
        @item.Message
      </li>
    }
  </ul>
@snip.SnipEnd()
@* @Sys.SourceCode.ResultEnd("file:../DataSources/KeepOdd.cs") *@
<trim>
  <p>
    Important: Note that the DataSource also has code to handle errors if the In was not attached.
  </p>
</trim>

@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })
