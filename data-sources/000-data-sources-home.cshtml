@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;
@using System.Linq;
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = GetCode("/shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys }) 
</hide>


<h2>Dynamic DataSources Tutorial</h2>
<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
    <p>
      <strong>DataSources</strong> are the magic backbone of 2sxc.
      They can get data, filter it, sort it, and more.
      In many cases you will simply use the DataSources provided by 2sxc and the EAV system, but you can do even more.
      Specifically:
    </p>

    <ul>
      <li>
        You can create your own <strong>Dynamic DataSources</strong> in C# and use them in your code and in Visual Query.
        This is a bit more advanced, but very powerful.
        Common scenarios are DataSources which do things or retrieve data which the built-in DataSources don't do.
      </li>
      <li>
        You can create <strong>compiled DataSources</strong> in C# and use them in your code and in Visual Query.
        This is much more advanced, and not demonstrated in these tutorials, 
        since it would be hard to install them.
      </li>
    </ul>
  </div>
</div>

@*
  TODO: @2dg - move in all use-tutorials from 200-400
  // 200, 210, 230, 300, 320 merged into 000
  // Diese seite fehlt 220
  https://2sxc.org/dnn-tutorials/en/razor/data-sources220/page
*@

@Html.Partial("../Shared/Accordion/Accordion List.cshtml", new { Sys, NameId = "datasources-dynamic-page" })


@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })