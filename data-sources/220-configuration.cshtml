@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;
@using System.Linq;
@using ToSic.Eav.DataSources;
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys }) 
</hide>


<h2>Custom Dynamic DataSources - Configuration</h2>
<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
    <p>
      Often you will need a DataSource that accepts some kind of parameters (configuration).
      The code must have <code>[Configuration]</code> attributes on the properties that should be configurable.
      When calling <code>GetSource(...)</code> use <code>options: new { ... }</code> to set the values.
    </p>
  </div>
</div>

<trim>
  <h2>Custom DataSource with Configuration</h2>
  <p>
    This simple example will get a DataSource from a file, and pass some configuration options.
    Specifically we'll give it the <code>AmountOfItems</code> and <code>FavoriteColor</code>.
  </p>
</trim>

@Sys.SourceCode.ResultStart("custom-101", "WithConfig.cs")
  @{
    // Create the Dynamic DataSource with the name "WithConfig"
    // and set some configuration options
    var withConfig = Kit.Data.GetSource(name: "WithConfig", parameters: new {
      AmountOfItems = 3,
      FavoriteColor = "dark blue"
    });
  }
  <h3>List of Data in the WithConfig DataSource (@withConfig.List.Count())</h3>
  <ul>
    @foreach (var item in AsList(withConfig)) {
      <li>
        <strong>@item.Title</strong> - Favorite Color: @item.FavoriteColor
      </li>
    }
  </ul>
@Sys.SourceCode.ResultEnd("file:../DataSources/WithConfig.cs")

@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })
