@inherits Custom.Hybrid.Razor14
<hide>
@Html.Partial("_header.cshtml")
@{
  // IMPORTANT: This must be at the top of the file, so it executes first
  CreateInstance("Shared.cs").EnableEditForAnonymous(Edit);
  var hlp = CreateInstance("../shared/Helpers.cs");
}

<div class="row mb-2">
  <div class="col-lg-7">
    <h2>2sxc Custom Input Fields (11.02+)</h2>
    <p>
      2sxc 11 makes it very easy to create custom input fields using standard <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components" target="_blank">WebComponents</a>. 
      This example shows the most basic case - just a dummy message (so not a real input field). 
    </p>
    <p>You can use it to learn about things like:</p>
    <ol>
      <li>Naming conventions for where to put the files</li>
      <li>Naming conventions for the <code>tagName</code></li>
      <li>Using <code>customElements.define(...)</code> to register your element</li>
      <li>How web components use <code>constructor()</code> and making sure you have the <code>super()</code> call there</li>
      <li>Using <code>connectedCallback()</code> and <code>disconnectedCallback()</code> to init/destroy your component</li>
    </ol>
    <p>
      So just have a look and discover how simple everything can be ðŸš€.
    </p>
  </div>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml") 
</div>
<br>
@Html.Partial("../shared/_WarnAnonymousIfFeatureIsOff.cshtml")
</hide>

<h2>Basic Hello-World Custom Field</h2>
<p>
  This example shows a dummy-field which doesn't allow editing, but will just show a message. <br>
  Hit this edit button to have a look:
  @Kit.Toolbar.Empty().New("UiEmptyHelloWorld").AsTag()
</p>

<hide>
@Html.Partial("_warning.cshtml")

@Html.Partial("../shared/_PreCodeFooter.cshtml")
@Html.Partial("../shared/_source-code.cshtml", new {
  Path,
  File = "../system/field-empty-app-hello-world/index.js",
  Size = 700,
  Title = "Source of [App]/system/field-empty-app-hello-world/index.js",
})
</hide>