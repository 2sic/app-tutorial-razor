@inherits Custom.Hybrid.Razor14
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = GetCode("/shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys })
  @{ dynamic snip = null; }
  @{ Sys.ToolbarHelpers.EnableEditForAll();  /* IMPORTANT: This must be at the top of the file */ }
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
    <h2>2sxc Custom Input Fields (11.02+)</h2>
    <p>
      2sxc 11 makes it very easy to create custom input fields using standard <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components" target="_blank">WebComponents</a>. 
      This example shows the most basic case - just a dummy message (so not a real input field). 
    </p>
    <p>You can use it to learn about things like:</p>
    <ol>
      <li>Naming conventions for where to put the files</li>
      <li>Naming conventions for the <code>tagName</code></li>
      <li>Using <code>customElements.define(...)</code> to register your element</li>
      <li>How web components use <code>constructor()</code> and making sure you have the <code>super()</code> call there</li>
      <li>Using <code>connectedCallback()</code> and <code>disconnectedCallback()</code> to init/destroy your component</li>
    </ol>
    <p>
      So just have a look and discover how simple everything can be ðŸš€.
    </p>
  </div>
</div>
<br>
@Html.Partial("../shared/WarnAnonymousIfFeatureIsOff.cshtml")
</hide>

<h2>Basic Hello-World Custom Field</h2>

@((snip = Sys.SourceCode.TabsOutputAndSource(tabs: "file:../system/field-empty-app-hello-world/index.js")).SnipStart())
  <p>
    This example shows a dummy-field which doesn't allow editing, but will just show a message. <br>
    Hit this edit button to have a look:
    @Kit.Toolbar.Empty().New("UiEmptyHelloWorld").AsTag()
  </p>
@snip.SnipEnd()


@Html.Partial("warning.cshtml")
@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })