@inherits Custom.Hybrid.Razor14
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("_header.cshtml", new { Sys = Sys })
  @{
  // IMPORTANT: This must be at the top of the file, so it executes first
  CreateInstance("../Shared/ToolbarHelpers.cs").EnableEditForAnonymous(Edit);
  }
</hide>


<div class="row mb-5">
  <div class="col-lg-7">
    <h2>2sxc Custom WYSIWYG with Additional Button</h2>
    <p>
      This example show how we customize more of TinyMCE. 
    </p>
    <p>You can learn how to:</p>
    <ul>
      <li>Use <code>addTranslations()</code></li>
      <li>Use <code>configureOptions(...)</code> to extend the toolbar</li>
      <li>Use configureAddOns to change button options for the image</li>
      <li>Run code when the editor is running <code>init</code> to add button defininiots</li>
    </ul>
  </div>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml") 
</div>
<br>
@Html.Partial("../shared/_WarnAnonymousIfFeatureIsOff.cshtml")
</hide>

<div class="alert alert-success">  
  <h2>String WYSIWYG With Additional Button and Labels</h2>

@Sys.SourceCode.ResultAndSnippetStart("demo1", "Source of field_string_wysiwyg_button.js")
  <p>
    This example keeps the default buttons and adds another one, with multi-language labels <br>
    Hit this edit button to have a look: 
  </p>
  @Kit.Toolbar.Empty().New("UiStringWysiwygButtonMl").AsTag()
@Sys.SourceCode.ResultEnd("file:../system/field-string-wysiwyg-button-ml/index.js")
</div>


@Html.Partial("_warning.cshtml")
@Sys.PageParts.FooterWithSource()