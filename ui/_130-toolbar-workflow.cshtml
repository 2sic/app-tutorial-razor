@inherits Custom.Hybrid.Razor14
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("_header.cshtml", new { Sys = Sys })
  @{ Sys.ToolbarHelpers.EnableEditForAll();  /* IMPORTANT: This must be at the top of the file */ }
</hide>


<div class="row mb-5">
  <div class="col-lg-7">
    <h2>2sxc UI - Toolbar Workflows</h2>
    <p>
      Toolbars will automatically do things like open a dialog or refresh the page when the dialog closes. 
      But sometimes you want to override or change the default behavior - like:
    </p>
    <ol>
      <li>Prevent refresh on dialog close - to retrieve the data in JS</li>
      <li>Prevent creating new if a specific condition applies</li>
    </ol>
    <p>
      This is what the Workflows are for. You can register custom <code>before</code> and <code>after</code> code to run, change specs or prevent the action from executing. 
      <a href="https://r.2sxc.org/js-workflow" target="_blank">Read the workflow docs</a> or the 
      <a href="https://docs.2sxc.org/how-to/customize-edit-ux/toolbars.html" target="_blank">toolbar docs</a> to learn more about this. 
    </p>
  </div>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
</div>

<div class="alert alert-warning">
  Important: Usually only editors see these toolbars - so saving won't work. 
  Hover over the various boxes to see the result - like this: <br>
  <img loading="lazy" src="@App.Path/ui/assets/hover-example.jpg" width="100%">
</div>
@Html.Partial("../shared/_WarnAnonymousIfFeatureIsOff.cshtml")


</hide>
<div class="alert alert-success">

  <h2>Standard TagToolbar</h2>

@Sys.SourceCode.ResultAndSnippetStart("demo1", "Source of toolbar-workflow.js")
  @{
      var standartToolbar = Kit.Toolbar.Empty().New("UiEmptyHelloWorld").Settings(show: "always");
    }
  <div class="alert alert-primary" style="width: 100%;">
    <div id='tagWithToolbar' @standartToolbar>
      Float over this box to get a (+) button. 
      When you click it and close the dialog again, the page will <em>not refresh</em>. <br>
      Instead, you'll see console messages that a custom JS took over the process.
    </div>
  </div>
@Sys.SourceCode.ResultEnd("file:_130-toolbar-workflow.js")


<div class="alert alert-success">
  <h2>Standard Inline Toolbar</h2>

@Sys.SourceCode.ResultAndSnippetStart("demo2", "Source of toolbar-workflow.js")
  <div class="alert alert-primary" style="width: 100%;">
      <div id='inlineToolbar'>
        @Kit.Toolbar.Empty().New("UiEmptyHelloWorld").AsTag()
        When you click it and close the dialog again, the page will <em>not refresh</em>. <br>
        Instead, you'll see console messages that a custom JS took over the process.
      </div>
    </div>

@Sys.SourceCode.ResultEnd("file:_130-toolbar-workflow.js")


<hide>
  <h2>More Stuff</h2>
  <div>
    You can do much more - like change icons, call call-parameters etc. 
    Read the 
    <a href="https://docs.2sxc.org/how-to/customize-edit-ux/toolbars.html" target="_blank">how-to</a> and the 
    <a href="https://docs.2sxc.org/specs/cms/toolbars/toolbar-builder.html" target="_blank">specs</a> for this.
  </div>
</hide>

@Sys.PageParts.FooterWithSource()