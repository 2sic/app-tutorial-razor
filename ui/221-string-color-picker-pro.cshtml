@inherits Custom.Hybrid.Razor14
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = GetCode("/shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys })
  @{ dynamic snip = null; }
  @{ Sys.ToolbarHelpers.EnableEditForAll();  /* IMPORTANT: This must be at the top of the file */ }
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
    <h2>2sxc Custom Color-Picker Input Field - Configurable</h2>
    <p>
      Input fields may expect some configuration - like default colors or WebApi endpoints. To enable such a configuration, we need a Content-Type which defines all the fields that can be configured. This can be in the app-data, or it can be stored in a subfolder of the field-extension, to make redestribution easier. <br>
      This example contains the json-exported content-type in the folder <code>/system/field-string-app-color-pickr-pro/.data/contenttypes/</code> so you could just copy the extension folder to another app and use it from there. 
    </p>

    <p>So in this tutorial you'll learn how to:</p>
    <ul>
      <li>To see how the UI changes based on field configuration</li>
      <li>How to access such pre-configured settings with <code>connector.field.settings</code></li>
      <li>The Content-Type for configuration is included in the extension folder</li>
    </ul>
  </div>
</div>

  @Html.Partial("../shared/WarnAnonymousIfFeatureIsOff.cshtml")
</hide>

<h2>Configurable Color-Picker Input Field</h2>

@((snip = Sys.SourceCode.TabsOutputAndSource(tabs: new Dictionary<string, string> {
  { "Color-Picker.js", "file:../system/field-string-app-color-pickr/index.js" },
  { "Config JSON of Field", "file:../system/field-string-app-color-pickr-pro/.data/contenttypes/System.Fields.459d4ce3-b96b-4664-9947-75e46df9d33e.json" }
  })).SnipStart())
  <p>
    This example shows two color-picker fields, with different initial configurations. <br>
    Hit this edit button to have a look: 
  </p>
  @Kit.Toolbar.Empty().New("UiStringColorPickrPro").AsTag()
@snip.SnipEnd()


@Html.Partial("warning.cshtml")
@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })