@inherits Custom.Hybrid.RazorTyped
@{
  // Sys helps generate code snippets etc.
  var Sys = GetCode("../shared/Helpers.cs").Init(this);
  // The accordion is an external helper file, so we must treat it as dynamic
  var acc = MyModel.Get("Accordion") as dynamic;
  // variable to hold each section config
  dynamic accSection;
  dynamic qref;
}

@{
  // Patch so the tutorial works reliably even if the main module had data added which are not a person
  // So we're simulating that `MyItem` is a person, even if in the tutorial setup it may not be
  var MyItem = AsItem(MyData.GetStream("PersonAdams"));
}

@((accSection = acc.SectionOld("Work with Current Item (MyItem)")).Start())
  <p>
    Every view/template receives prepared data, usually on the <code>MyItem</code> object.
  </p>

  <h3>Work with Current Item (MyItem)</h3>
  @((qref = Sys.SourceCode.QuickRefSplit33(tutorials: new string[] { "entity", "content" })).SnipStart())
    <h4>Douglas Adams, the current item (MyItem)</h4>
    @MyItem.Picture("Mugshot", settings: "Square", width: 100, imgClass: "rounded-circle")
    <ol>
      <li>Name:          @MyItem.String("FirstName") @MyItem.String("LastName")</li>
      <li>Birthday:      @MyItem.DateTime("Birthday").ToString("d")</li>
      <li>Award:         @MyItem.Child("Awards").String("Name")</li>
      <li>Mugshot URL:   @MyItem.Url("Mugshot")</li>
      <li>Mugshot Raw String: @MyItem.String("Mugshot")</li>
    </ol>
  @qref.SnipEnd()
@accSection.End()


