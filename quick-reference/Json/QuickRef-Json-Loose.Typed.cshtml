@inherits Custom.Hybrid.RazorTyped
@{ var Sys = GetCode("/shared/Helpers.cs").Init(this); }
@{ dynamic qref; }
@{
  // Variables for the tests
  string jsonRoot = MyView.Folder.PhysicalPath + "/Json/json";
  var dudeTabs = new Dictionary<string, string> {
    { "dude.json", "file:json/dude.json" },
  };
}


  @((qref = Sys.SourceCode.QuickRefSplit33(tabs: dudeTabs)).SnipStart())
  @{
    // Simple JSON strings which could come from a file or web service
    var jDude = System.IO.File.ReadAllText(jsonRoot + "/dude.json");
    var loose = Kit.Json.ToTyped(jDude, propsRequired: false);
  }
  <ol>
    <li>
      <code>loose.String("Fake")</code> (typed):
      @loose.String("Fake")
    </li>
    <li>
      <code>loose.String("Fake")</code>:
      @loose.String("Fake")
    </li>
    <li>
      <code>loose.String("Fake", fallback: "I don't know!")</code>:
      @loose.String("Fake", fallback: "I don't know!")
    </li>
    <li>
      <code>loose.Int("Fake")</code>:
      @loose.Int("Fake", required: false)
    </li>
    <li>
      <code>loose.Int("Fake", fallback: -1)</code>:
      @loose.Int("Fake", fallback: -1)
    </li>
  </ol>
  @qref.SnipEnd()

