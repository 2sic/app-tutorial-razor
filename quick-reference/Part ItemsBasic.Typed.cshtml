@inherits Custom.Hybrid.RazorTyped
@{
  // Sys helps generate code snippets etc.
  var Sys = GetCode("../shared/Helpers.cs").Init(this);
  // The accordion is an external helper file, so we must treat it as dynamic
  var accordion = MyModel.Get("Accordion") as dynamic;
  // The prefix is used to create unique IDs for the accordion; just in the name is reused elsewhere
  var accPrefix = "acc-items-";
}

@accordion.ItemStart(accPrefix + "ref-content", "Work with Current Item (MyItem)")
  <p>
    Every view/template receives prepared data, either entered by the user on this page, or provided throug a query.
  </p>

  <hide>
  @{
    // Patch so the tutorial works reliably even if the main module had data added which are not a person
    // So we're simulating that `MyItem` is a person, even if in the tutorial setup it may not be
    var MyItem = AsItem(MyData);
  }
  </hide>

  <h3>Work with Current Item (MyItem)</h3>
  @Sys.SourceCode.ResultRefStart("content")
    <h4>Douglas Adams, the current item (MyItem)</h4>
    @MyItem.Picture("Mugshot", settings: "Square", width: 100, imgClass: "rounded-circle")
    <ol>
      <li>MyItem Name:          @MyItem.String("FirstName") @MyItem.String("LastName")</li>
      <li>MyItem Birthday:      @MyItem.DateTime("Birthday").ToString("d")</li>
      <li>MyItem Award:         @MyItem.Child("Awards").String("Name")</li>
      <li>MyItem Mugshot URL:   @MyItem.Url("Mugshot")</li>
      <li>MyItem Mugshot Raw String: @MyItem.String("Mugshot")</li>
    </ol>
    <h4>Loop the persons in the Query for this view</h4>
    <ul>
      @foreach (var person in AsItems(MyData)) {
        <li>
          @MyItem.Picture("Mugshot", settings: "Square", width: 50, imgClass: "rounded-circle")
          @person.String("FirstName") @person.String("LastName")
        </li>
      }
    </ul>
  @Sys.SourceCode.ResultRefEnd(new string[] { "entity", "content" })  
@accordion.ItemEnd()

@accordion.ItemStart(accPrefix + "ref-todo", "Work with Images, Multi-Language TODO")
@accordion.ItemEnd()
