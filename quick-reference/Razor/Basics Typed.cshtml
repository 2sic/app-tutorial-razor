@inherits Custom.Hybrid.RazorTyped
@{
  // Sys helps generate code snippets etc.
  var Sys = GetCode("/shared/Helpers.cs").Init(this);
  // The accordion is an external helper file, so we must treat it as dynamic
  var acc = MyModel.Get("Accordion") as dynamic;
  // variable to hold each section config
  dynamic accSection;
  dynamic qref;
}

  <p>
    These are some very common Razor APIs which you should know.
  </p>

  @{
    var sections = new [] {
      "quickref-razor-variables",
      "quickref-razor-if",
      "quickref-razor-loop",
      "quickref-razor-html-raw",
      "quickref-razor-emoji",
      "quickref-razor-functions",
      "quickref-razor-partials-basic",
    };
  }

  @foreach(var section in sections) {
    @((accSection = acc.Section(section)).Start())
      @Html.Partial("./" + section + ".cshtml")
    @accSection.End()
  }


  @((accSection = acc.Section("quickref-razor-partials-parameters")).Start())
    @((qref = Sys.SourceCode.QuickRefSplit33(tabs: new Dictionary<string, string> {
      { "Source Box Typed.cshtml", "file:../../reuse/Box Typed.cshtml" },
    }, tutorials: new string[] { "reuse110" })).SnipStart())
      <h4>Call some external Razor files</h4>
      <ol>
        <li>
          @Html.Partial("../../reuse/Box Typed.cshtml", new {
            Label = "Hello, this is the first line"
          })
        </li>
        <li>
          @Html.Partial("../../reuse/Box Typed.cshtml", new {
            Label = "Second line!", Color = "red"
          })
        </li>
        <li>
          @{
            var label = "Third line!"; // if variable name is the same...
            var color = "green";  // if variable name is the same...
          }
          @Html.Partial("../../reuse/Box Typed.cshtml", new { label, color })
        </li>
      </ol>
    @qref.SnipEnd()
  @accSection.End()


  @((accSection = acc.Section("quickref-razor-shared-code")).Start())
    <h3></h3>
    @((qref = Sys.SourceCode.QuickRefSplit33(tabs: new Dictionary<string, string> {
      { "Source SharedFunctions.cs", "file:../../reuse/SharedFunctions.cs" },
    }, tutorials: new string[] { "reuse210", "reuse310", "reuse320" })).SnipStart())
      @{
        // helper library to say hello & create QR codes
        var qrLib = GetCode("../../reuse/SharedFunctions.cs");
      }
      <h4>Call some Code in External CSharp Files</h4>
      <ol>
        <li>Hello from shared lib: @qrLib.SayHello()</li>
        <li>
          QR Code from shared lib <br>
          <img loading="lazy" src='@qrLib.QrPath("https://2sxc.org")' width="75px">
        </li>
      </ol>
    @qref.SnipEnd()
  @accSection.End()
