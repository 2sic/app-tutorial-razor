@inherits Custom.Hybrid.Razor14
<hide>
@Html.Partial("_header.cshtml")
@{
  // 2sxclint:disable:razor-no-renderpage
  var linker = CreateInstance("../shared/Helpers.cs");

}
</hide>

<trim>

<div class="row">
  <div class="col-lg-7">
    <h2>Reuse templates and code</h2>
    <p>
      This will show you how to place partial templates into separate files, and how to put functions you need in many places in separate files as well. It focuses on: 
    </p>
    <ol>
      <li>
        <code>@@Html.Partial(...)</code> to render another page (older versions of 2sxc used <code>@@RenderPage(...)</code>) 
        - see <a href="https://docs.2sxc.org/net-code/dynamic-code/object-html.html" target="_blank">docs</a>
      </li>
      <li>
        <code>DynamicModel</code> is the object used in sub-pages to receive parameters from the caller 
        - see <a href="https://docs.2sxc.org/net-code/dynamic-code/object-dynamic-model.html" target="_blank">docs</a>
      </li>
      <li>
        <code>CreateInstance(...)</code> to create objects from .cs files 
        - see <a href="https://docs.2sxc.org/net-code/dynamic-code/create-instance.html" target="_blank">docs</a>
      </li>
      <li>
        <code>Func&lt;dynamic, dynamic&gt;</code> micro-helpers are ideal for small sub-templates 
        - see <a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-5.0#templated-razor-delegates" target="_blank">docs</a>
      </li>
    </ol>
  </div>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
</div>

</trim>

<hr>
<h2>Reuse Shared Stuff Examples</h2>

<ol>
  @linker.TutorialLink("Micro-Helpers (like functions) with Template Delegates", "reuse101")
  @linker.TutorialLink("Reuse Razor Components with @Html.Partial and DynamicModel", "reuse110")
  @linker.TutorialLink("Reuse Razor Helpers (mini-templates) with CreateInstance", "reuse210")
  @linker.TutorialLink("Reuse a function library CreateInstance", "reuse310")
  @linker.TutorialLink("Reuse code with .cs files", 
    "reuse320",
    "CreateInstance is enhanced in 2sxc 10.01 to support .cs files to share code across Razor files and WebApi Controllers.",
    "")
</ol>


<hr>
<h2>Deprecated Features</h2>
<p>
  This shows / documents features which work, but are not recommended any more:
</p>

@if(CmsContext.Platform.Name == "Oqtane") {
  @Html.Partial("../shared/_MessageOqtaneDisabled.cshtml")
} else {
  <ol>
    @linker.TutorialLink("Split Razor Templates into C#-Code and Template", 
      "reuse410",
      "Now you can split out complicated C# code so designers don't have to worry about it. ",
      "deprecated, Dnn Only")
  </ol>
}