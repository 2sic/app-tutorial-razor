@inherits Custom.Hybrid.Razor14
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("_header.cshtml", new { Sys = Sys })
</hide>


<trim>
<img loading="lazy" src="@App.Path/koi/assets/koi-slogan-right.png" class="img-responsive" width="100%">

<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
    <p>
      Learn how to use <code>Connect.Koi</code> to ensure your module/temlate has the right CSS frameworks, to either auto-include otherwise, show messages to the admin or generate different output. This uses <a href="https://connect-koi.net/" target="_blank">Connect.Koi</a>. 
    </p>
  </div>
</div>

<h2>Some notes before we start</h2>
<p>
  Koi works like magic behind the scenes, ensuring that your component knows what CSS-framework is already included, and can adapt its behavior. 
</p>
<p>
  For this to work, the theme must <em>communicate</em> what framework it's using, by including a <code>koi.json</code> file as explained in the <a href="https://connect-koi.net/dnn-themes" target="_blank">docs</a>. This is included in the default DNN themes since DNN 9.2, as well as in <a href="https://github.com/2sic/dnn-theme-bootstrap4-instant" target="_blank">Bootstrap Instant</a>, <a href="https://www.nvquicktheme.com/" target="_blank">nvQuickTheme</a> and many other.
</p>
<p>
   Some themes may not include that file, so your best bet is to always have something which either alerts the user, that this is missing, or automatically adds your framework, if it can't detect what's happening. 
</p>
</trim>

@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })
