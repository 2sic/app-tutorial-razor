@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;
@using System.Linq;
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("_header.cshtml", new { Sys = Sys })
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
    <h2>Working with JSON Data</h2>
    <p>
      JSON data can be tricky. The easiest way is to convert it to a dynamic object using <code>AsDynamic(string)</code>. Then you can easily use it in your code. 
    </p>
  </div>
</div>


<h3>Show properties and sub-properties - case insensitive</h3>

@Sys.SourceCode.ResultAndSnippetStart("json-intro", "Source of demo.json")
  @{
      var someJson = System.IO.File.ReadAllText(App.PhysicalPath + "/json/demo.json");
      var thing = AsDynamic(someJson);
    }
  <ul>
    <li>Title: @thing.Title</li>
    <li>Description: @thing.IsCool</li>
    <li>Sub-item title: @thing.SubItem.Title</li>
    <li>Is this a list/array? @thing.IsList </li>
    <li>Are the tags a list? @thing.Tags.IsList </li>
  </ul>
@Sys.SourceCode.ResultEnd("file:demo.json")


<h3>Loop through a list of @thing.Tags.Count tags</h3>

@Sys.SourceCode.ResultAndSnippetStart("json-list",  "Source of demo.json")
  <ol>
  @foreach (var tag in thing.Tags) {
    <li>@tag</li>
  }
  </ol>
@Sys.SourceCode.ResultEnd("file:demo.json")


<h3>Loop through a list of @thing.Count properties</h3>

@Sys.SourceCode.ResultAndSnippetStart("json-probs",  "Source of demo.json")
  <ol>
  @foreach (var prop in thing) {
    <li><strong>@prop</strong> (@thing[prop].GetType()) = @thing[prop]</li>
  }
  </ol>
@Sys.SourceCode.ResultEnd("file:demo.json")


@Sys.PageParts.FooterWithSource()