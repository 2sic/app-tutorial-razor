@inherits Custom.Hybrid.Razor14
<hide>
@{
  var hlp = CreateInstance("../shared/Helpers.cs");
  var sourceCode = hlp.ShowCodeFile as string; // required, because Oqtane can't use dynamic
}

@Html.Partial("_header.cshtml")

<div class="row">
  <div class="col-lg-7">
    <h2>Working with JSON Data</h2>
    <p>
      JSON data can be tricky. The easiest way is to convert it to a dynamic object using <code>AsDynamic(string)</code>. Then you can easily use it in your code. 
    </p>
  </div>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
</div>
</hide>

<hr>
<snippet id="json-intro">
@{
  var someJson = System.IO.File.ReadAllText(App.PhysicalPath + "/json/demo.json");
  var thing = AsDynamic(someJson);
}
<h3>Show properties and sub-properties - case insensitive</h3>
<ul>
  <li>Title: @thing.Title</li>
  <li>Description: @thing.IsCool</li>
  <li>Sub-item title: @thing.SubItem.Title</li>
  <li>Is this a list/array? @thing.IsList </li>
  <li>Are the tags a list? @thing.Tags.IsList </li>
</ul>
</snippet>
<hide-silent> @* Show only this snippet *@
  @Html.Partial(sourceCode, new { Path, Snippet = "json-intro" }) 
</hide-silent>

<snippet id="json-list">
<h3>Loop through a list of @thing.Tags.Count tags</h3>
<ol>
@foreach(var tag in thing.Tags) {
  <li>@tag</li>
}
</ol>
</snippet>
<hide-silent> @* Show only this snippet *@
  @Html.Partial(sourceCode, new { Path, Snippet = "json-list" }) 
</hide-silent>

<snippet id="json-props">
<h3>Loop through a list of @thing.Count properties</h3>
<ol>
@foreach(var prop in thing) {
  <li><strong>@prop</strong> (@thing[prop].GetType()) = @thing[prop]</li>
}
</ol>
</snippet>
<hide-silent> @* Show only this snippet *@
  @Html.Partial(sourceCode, new { Path, Snippet = "json-props" }) 
</hide-silent>

<hide>
@Html.Partial(sourceCode, new { 
  Title = "Demo.json ",
  Path = App.PhysicalPath + "/json/",
  File = "demo.json",
  Size = 250
})

@Html.Partial("../shared/_PreCodeFooter.cshtml")
@Html.Partial("../shared/_source-code.cshtml", new { Path, Size = 900 }) 
</hide>