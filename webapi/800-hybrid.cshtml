@inherits Custom.Hybrid.Razor14
<hide>
  @{
  // Tell the page that we need the 2sxc Js APIs
  Kit.Page.Activate("2sxc.JsCore"); 
  }
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = GetCode("/shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys })
  @{ dynamic snip = null; }
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
      <h2>Hybrid (Dnn / Oqtane) WebApi Examples</h2>
      <p>
        This is an advanced implementation of the basic examples before. It uses <code>@("#" + "if")</code> statements to ensure that the same code can run in Dnn and Oqtane. 
      </p>

      <p>
        Click to see the result of a WebApi call with the shared code:  
      </p>
    </div>
  </div>


@((snip = Sys.SourceCode.TabsOutputAndSource(tabs: "file:../api/HybridController.cs")).SnipStart())
  <button type="button" class="btn btn-primary" onclick="callBasicHello(this)">
    Get Hello
  </button> 
  <button type="button" class="btn btn-primary" onclick="callSquare(this, 7)">
    Square 7
  </button> <button type="button" class="btn btn-primary" onclick="callSquare(this, 27)">
    Square 27
  </button>
    @* 2sxclint:disable:no-inline-script *@
  <script>
    function callBasicHello(moduleContext) {
      $2sxc(moduleContext).webApi.fetchJson('app/auto/api/hybrid/hello')
        .then(function (results) { alert(results); });
    }

    function callSquare(moduleContext, original) {
      $2sxc(moduleContext).webApi.fetchJson('app/auto/api/hybrid/square?number=' + original)
        .then(function (results) { alert(results); });
    }
  </script>
@snip.SnipEnd()


@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })