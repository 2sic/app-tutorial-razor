@inherits Custom.Hybrid.Razor14
<hide>
  @{
  // Tell the page that we need the 2sxc Js APIs
  Kit.Page.Activate("2sxc.JsCore"); 
  }
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("_header.cshtml", new { Sys = Sys })
  @{
      string sourceCode = Sys.ShowCodeFile; // must be typed, because Html.Partial on Oqtane can't use dynamic variables
  }
</hide>


<trim>
  <div class="row mb-5">
    <div class="col-lg-7">
      <h2>WebApi with Polymorph Editions</h2>
      <p>
        You often need to make changes on a live site (open-heart-surgery) without affecting the users. For this, you should have two copies of the API Controller - one live, and one staging. This is done by doing the following: 
      </p>
      <ol>
        <li>Place the live, tested controller in <code>/live/api/</code> and make sure your JavaScript accesses this</li>
        <li>Place a copy in <code>/staging/api/</code> or something similar (you can use other path names as well) and make your development JavaScript access that endpoint</li>
        <li>Then you can develop without hurting the live output.</li>
        <li>Once it's stable, you then deploy by copying the new controller to <code>/live/api/</code></li>
      </ol>

      <p>
        Click to see the result of the two calls, one to live, one to staging:
      </p>
    </div>
    @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  </div>
</trim>

@Sys.SourceCode.ResultAndSnippetStart("editions", "Source of Live_api", "Source of Dev_api")
 <button type="button" class="btn btn-primary" onclick="callBasicHello(this, 'live')">
   Get Hello from live
 </button> 
 <button type="button" class="btn btn-primary" onclick="callBasicHello(this, 'dev')">
   Get Hello from dev
 </button> 
  <script>
   function callBasicHello(moduleContext, edition) {
    $2sxc(moduleContext).webApi.fetchJson('app/auto/' + edition + '/api/demo/hello')
      .then(data => alert(data));
   }
 </script>
@Sys.SourceCode.ResultEnd("file:../live/api/DemoController.cs", "file:../dev/api/DemoController.cs")



@Sys.PageParts.FooterWithSource()