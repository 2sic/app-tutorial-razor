@inherits Custom.Hybrid.Razor14
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = GetCode("/shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys })
  @{ dynamic snip = null; }
</hide>

<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
      <h2>Very basic WebApi Examples</h2>
      <p>
        In this example, we'll assume your WebApi controller is called <code>Basic</code> (so the file is called <code>BasicController.cs</code> and has a class called <code>BasicController</code>). It's located in <code>/api</code> which is the default location for WebApi controllers. <br>
        We'll show various usages both with the new <code>webApi.fetchJson(...)</code> and <code>webApi.fetch(...)</code> standard <code>fetch</code>
      </p>
      <ol>
        <li>with the new <code>webApi.fetchJson(...)</code> and <code>webApi.fetch(...)</code> commands (new in v12.10)</li>
        <li>with the browser built in <code>fetch</code></li>
        <li>using jQuery (not recommended any more, because we believe jQuery is dying)</li>
        <li>another example calling the endpoint using a parameter to calculate something so you can see how to use url parameters.</li>
      </ol>
      <p>
        Click to see the result of a WebApi call with the shared code:  
      </p>
    </div>
  </div>


@((snip = Sys.SourceCode.TabsOutputAndSource(tabs: "file:../api/BasicController.cs")).SnipStart())
  <button type="button" class="btn btn-primary" onclick="helloFetchJson(this)">Quick Fetch Json "Hello"</button>
    @* 2sxclint:disable:no-inline-script *@
  <script>
    // Fetch using modern Browser Fetch-promises, with auto-get Json
    // This is the recommended method if you expect JSON, because it's simpler
    // This also uses the shortest API syntax `controller/method`
    function helloFetchJson(moduleContext) {
      $2sxc(moduleContext).webApi.fetchJson('basic/hello')
        .then(data => alert('Result using quick Fetch JSON: ' + data));
    }
  </script>
@snip.SnipEnd()


@Html.Partial("MessageHybrid.cshtml") 


@((snip = Sys.SourceCode.TabsOutputAndSource(tabs: "file:../api/BasicController.cs")).SnipStart())
  <button type="button" class="btn btn-primary" onclick="helloFetch(this)">Quick Fetch "Hello"</button> 
    @* 2sxclint:disable:no-inline-script *@
  <script>
      // Fetch using modern Browser APIs
      // This is the more manual method, in case you don't expect JSON or want more control
      // This uses the full internal syntax `app/auto/api/controller/method`
      function helloFetch(moduleContext) {
        $2sxc(moduleContext).webApi.fetchRaw('app/auto/api/basic/hello')
          .then(response => response.json())
          .then(data => alert('Result using quick Fetch: ' + data));
      }
  </script>
@snip.SnipEnd()


@((snip = Sys.SourceCode.TabsOutputAndSource(tabs: "file:../api/BasicController.cs")).SnipStart())
  <button type="button" class="btn btn-primary" onclick="helloFetchManual(this)">Quick Fetch "Hello"</button>
    @* 2sxclint:disable:no-inline-script *@
    <script>
    // Manual Fetch call using more code
    // This is the most manual method, but shows how it actually works internally
    function helloFetchManual(moduleContext) {
      var moduleApi = $2sxc(moduleContext).webApi;  // webApi for this specific Module
      var fullApiUrl = moduleApi.url('app/auto/api/basic/hello'); // API url based on current App
      var headers = moduleApi.headers("GET");       // Headers used for GET calls
      fetch(fullApiUrl, { headers: { ...headers } })
          .then(response => response.json())
          .then(data => alert('Result using manual Fetch: ' + data));
    }
  </script>
@snip.SnipEnd()


@((snip = Sys.SourceCode.TabsOutputAndSource(tabs: "file:../api/BasicController.cs")).SnipStart())
  <button type="button" class="btn btn-secondary" onclick="helloJQueryOld(this)">jQuery Get Hello</button>
    @* 2sxclint:disable:no-inline-script *@
    <script>
    // jQuery versions (not recommended any more, will not work on pages without jQuery)
    function helloJQueryOld(moduleContext) {
      $2sxc(moduleContext).webApi.get('app/auto/api/basic/hello')
        .then(function (results) {
          alert("Result using jQuery: " + results);      
        });
    }
  </script>
@snip.SnipEnd()


@((snip = Sys.SourceCode.TabsOutputAndSource(tabs: "file:../api/BasicController.cs")).SnipStart())
  <button type="button" class="btn btn-primary" onclick="squareFetch(this, 7)">Fetch Square 7</button>
    <button type="button" class="btn btn-primary" onclick="squareFetch(this, 27)">Fetch Square 27</button>
      @* 2sxclint:disable:no-inline-script *@
    <script>
      function squareFetch(moduleContext, original) {
        $2sxc(moduleContext).webApi.fetchJson('basic/square?number=' + original)
          .then(data => alert('The square of ' + original + '= ' + data));
      }
  </script>
@snip.SnipEnd()


@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })
