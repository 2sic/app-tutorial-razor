@inherits Custom.Hybrid.Razor14
@{
  // Tell the page that we need the 2sxc Js APIs
  Kit.Page.Activate("2sxc.JsCore"); 
}
<hide>
@Html.Partial("_header.cshtml")
@{
  var hlp = CreateInstance("../shared/Helpers.cs");
  string sourceCode = hlp.ShowCodeFile; // must be typed, because Html.Partial on Oqtane can't use dynamic variables
}
</hide>

<trim>
  <div class="row mb-5">
    <div class="col-lg-7">
      <h2>Very basic WebApi Examples</h2>
      <p>
        In this example, we'll assume your WebApi controller is called <code>Orders</code> (so the file is called <code>OrdersController.cs</code> and has a class called <code>OrdersController</code>). It's located in <code>/api</code> which is the default location for WebApi controllers. <br>
        We'll show various usages of the http methods with the new <code>webApi.fetch(...)</code>
      </p>

      <p>
        Click to see the result of a WebApi call with the shared code:  
      </p>
    </div>
    @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  </div>
</trim>


<snippet id="fetch-get">
  <button type="button" class="btn btn-primary" onclick="getOrdersFetch(this)">Quick Fetch GET "Orders"</button> 
  <hide-silent> @* Show only this snippet *@
    @Html.Partial(sourceCode, new { Path, Snippet = "fetch-get" }) 
  </hide-silent>
  <script>
    function getOrdersFetch(moduleContext) {
      $2sxc(moduleContext).webApi.fetchJson('orders/get')
        .then(data => alert('Result using quick Fetch: ' + JSON.stringify(data)));
    }
  </script>
  </snippet>
<snippet id="fetch-post">
  <button type="button" class="btn btn-primary" onclick="postOrdersFetch(this)">Quick Fetch POST "Orders"</button> 
  <hide-silent> @* Show only this snippet *@
    @Html.Partial(sourceCode, new { Path, Snippet = "fetch-post" }) 
  </hide-silent>
  <script>
    function postOrdersFetch(moduleContext) {
      $2sxc(moduleContext).webApi.fetchJson('orders/post', { amount: Math.floor(Math.random() * 100) })
        .then(data => alert('Result using quick Fetch: ' + JSON.stringify(data)));
    }
  </script>
</snippet>
<snippet id="fetch-put">
  <button type="button" class="btn btn-primary" onclick="putOrdersFetch(this)">Quick Fetch PUT "Orders"</button> 
  <hide-silent> @* Show only this snippet *@
    @Html.Partial(sourceCode, new { Path, Snippet = "fetch-put" }) 
  </hide-silent>
  <script>
    function putOrdersFetch(moduleContext) {
      $2sxc(moduleContext).webApi.fetchJson('orders/put', { amount: Math.floor(Math.random() * 100) }, 'PUT')
        .then(data => alert('Result using quick Fetch: ' + JSON.stringify(data)));
    }
  </script>
</snippet>
<snippet id="fetch-delete">
  <button type="button" class="btn btn-primary" onclick="deleteOrdersFetch(this)">Quick Fetch DELETE "Orders"</button> 
  <hide-silent> @* Show only this snippet *@
    @Html.Partial(sourceCode, new { Path, Snippet = "fetch-delete" }) 
  </hide-silent>
  <script>
    function deleteOrdersFetch(moduleContext) {
      $2sxc(moduleContext).webApi.fetchJson('orders/delete', null, 'DELETE')
        .then(data => alert('Delete executed'));
    }
  </script>
</snippet>

<hide>
@* 2sxclint:disable:no-inline-script *@

@Html.Partial("../shared/_PreCodeFooter.cshtml")
@Html.Partial("../shared/_KitBaseClassInfoBox.cshtml", new { ServiceName = "Page", Service = "IPageService" })
@Html.Partial(sourceCode, new { Path }) 

@Html.Partial("_MessageHybrid.cshtml")

@Html.Partial(sourceCode, new { 
  Path = App.PhysicalPath + "/api/",
  File = "OrdersController.cs",
  TitlePath = "/api/"
}) 
</hide>