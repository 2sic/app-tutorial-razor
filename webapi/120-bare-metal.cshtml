@inherits Custom.Hybrid.Razor14
<hide>
  @{
  // Tell the page that we need the 2sxc Js APIs
  Kit.Page.Activate("2sxc.JsCore"); 
  }
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = GetCode("/shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys })
  @{ dynamic snip = null; }
</hide>

@* TODO:: @2dm merged into 110-basic, delte this file and view  *@

<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
      <h2>Bare Metal WebAPI Commands (v12.10+)</h2>
      <p>
        In some cases you want to have more control over the API calls, but still need 2sxc to help you get the right headers and urls. 
        This is what we call the <strong>Bare Metal WebApi</strong> since it gives you the stuff so you can do the work yourself. 
      </p>
      <p>
        As with everything, you usually need to get the module <code>sxc</code> controller first, so that the values you get match your app and use case. 
        In these examples, we're using the current HTML-node to find the <code>sxc</code> controller, 
        but there are other ways as well if you prefer working the the Module Id.
      </p>
    </div>
  </div>

@*
TODO: @2dm examples with url-parameters object
*@

@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })