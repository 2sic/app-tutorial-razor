@inherits Custom.Hybrid.Razor14
<hide>
  @{
  // Tell the page that we need the 2sxc Js APIs
  Kit.Page.Activate("2sxc.JsCore"); 
  }
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys })
  @{ dynamic snip = null; }
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
      <h2>More secure Basic WebApi Example</h2>
      <p>
        In this example, we'll ensure that calls to your API only come from users who are visiting your website. This is to protect agains <a href="https://en.wikipedia.org/wiki/Cross-site_request_forgery" target="_blank">CSRF</a> attacks, where another website gets your users to interact with your API. That could be dangerous, because maybe your API has things only a logged in user should see - and without the CSRF protection, the other website could get access to that because the user is logged in. 
      </p>

      <p>
        Click to see the result of a WebApi call with the shared code:  
      </p>
    </div>
  </div>


@((snip = Sys.SourceCode.TabsOutputAndSource(tabs: "file:../api/VerifiedController.cs")).SnipStart())
  <button type="button" class="btn btn-primary" onclick="apiWithVerification(this)">
    Call WebApi
  </button> 
    @* 2sxclint:disable:no-inline-script *@
  <script>
    function apiWithVerification(moduleContext) {
      $2sxc(moduleContext).webApi.fetchJson('verified/hello')
        .then(data => alert(data));
    }
  </script>
@snip.SnipEnd()


@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })
