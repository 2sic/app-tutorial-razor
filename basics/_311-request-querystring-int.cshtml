@inherits Custom.Hybrid.Razor12
<hide>
@Html.Partial("_header.cshtml")
@{  var hlp = CreateInstance("../shared/Helpers.cs"); }
</hide>
@using ToSic.Razor.Blade;
<trim>
<h2>Working with <em>number</em> URL Parameters</h2>
<p>
  When you expect a number, you usually need to convert it to an <code>int</code> or similar for further use. Otherwise you'll be comparing numbers with strings. For example <code>if(3 == "3")</code> would return <code>false</code> - which is not what you usually want. <br>
  Additionally, you usually want to ensure that if no parameter is found, you will have a default value - otherise you may run into errors.
</p>
<ul>
  @SubpageLink("This page without additional params", "")
  @SubpageLink("put ?id=27 in the url", "id=27")
</ul>
<hr>
</trim>

<snippet id="basic-number-params">
@{
  // this variable is a string, but could be null or empty
  var idAsString = CmsContext.Page.Parameters["id"];

  // this one is better - Text.First ensures that we have a value
  var idAsStringWithFallback = Text.First(CmsContext.Page.Parameters["id"], "0");

  // let's convert to a real number (int)
  var id = Int32.Parse(idAsStringWithFallback);
}
<ul>
  <li>
    <strong>Raw id from URL:</strong> @idAsString <br>
    Equal to string "27": @(idAsString == "27") <br>
    Equal to number 27: (would throw error) <br>
  </li>
  <li>
    <strong>Safe id from URL:</strong> @idAsStringWithFallback <br>
    Equal to string "27": @(idAsStringWithFallback == "27") <br>
    Equal to number 27: (would throw error) <br>
  </li>
  <li>
    <strong>Number id from URL:</strong> @id <br>
    Equal to string "27": (would throw error) <br>
    Equal to number 27: @(id == 27) <br>
  </li>
</ul>
</snippet>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "basic-number-params", Size = 550 }) 
</hide-silent>


<trim>
<hr>
<h3>More Links about converting strings to numbers</h3>
<ol>
  @hlp.LiExtLink("https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/how-to-convert-a-string-to-a-number", "Documentation from MSDN")
</ol>
</trim>

<hide>
@functions {
  dynamic SubpageLink(string label, string urlparams) {
    return Tag.Li()
      .Wrap(
        Tag.A(label).Href(Link.To(parameters: "?basics311=page&" + urlparams))
      );
  }
}

@Html.Partial("../shared/_PreCodeFooter.cshtml")
@Html.Partial("../shared/_source-code.cshtml", new { Path, Size = 850 }) 
</hide>