@inherits Custom.Hybrid.Razor14
<hide>
@Html.Partial("_header.cshtml")
@{  
  /* Internal remarks for the tutorial developers
    To reall see the images loading they must have different names in each tutorial.
    Otherwise some image is already loaded because of a different example, and the user won't see lazy-loading on resize.
  */
  var hlp = CreateInstance("../shared/Helpers.cs");
}
@functions {
  // Special helper to create the config object
  // Will also replace common things in the src-set
  object PictureTagPreview(object tag, int size) {
    return new {
      Path,
      Result = tag.ToString()
        .Replace(">", ">\n")
        .Replace(",", ",\n")
        .Replace(" alt=", "\nalt="),
     Size = size
    };
  }
}
</hide>

<trim>
  <div class="row">
    <div class="col-lg-7">
      <h2>Browser-Capabilities <code>picture</code> with different formats</h2>
      <p>
        The perfect image depends on browser capabilities. 
        The following example will get modern browsers a webp image (which is smaller/faster) and normal browsers a jpg. 
      </p>
    </div>
    @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  </div>
</trim>

@Html.Partial("../shared/_KitBaseClassInfoBox.cshtml", new { ServiceName = "Image", Service = "IImageService" })

<hide>
  <h3>What you need to know about <code>picture</code></h3>
  <ol>
    <li>It's just a wrapper for the <code>img</code></li>
    <li>You always need an <code>img</code> tag inside it, and this is what old browsers like IE6 will take even if they don't understand <code>picture</code></li>
    <li>The <code>img</code> tag also caries the <code>alt</code> description, width, size, styles etc. which is used for all images</li>
    <li>The <code>source</code> tags contain rules like <code>type</code> or <code>media</code> which the browser uses to pick the best image</li>
    <li>The <code>source</code> also supports the same <code>srcset</code> and <code>sizes</code> just like the <code>img</code> tag</li>
    <li><strong>Important: </strong> you must use <code>srcset</code> and not <code>src</code> on the <code>source</code> tags</li>
    <li><strong>Important: </strong> Order matters! Put the <code>source</code> tags first in the order you need, as the first match will be taken.</li>
  </ol>
</hide>

<snippet id="demo-picture-formats">
<picture>
  <source type="image/webp" srcset="@App.Path/img/assets/koi-400.webp">
  <source type="image/png" srcset="@App.Path/img/assets/koi-400.png">
  <img style="width: 40%;" src="@App.Path/img/assets/jellyfish-1000.jpg">
</picture>
</snippet>
<br>
<code id="demo-picture-formats-label"></code>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "demo-picture-formats", Size = 120 }) 
</hide-silent>

<trim>
  <hr>
  <h2>Responsive <code>picture</code> with many resolutions</h2>
  <p>
    The perfect image is often different depending on the screen size. 
    The following example will get two different sizes, depending on the screen size. 
    Try resizing the screen and watch the network (F12) to see when the other sizes are loaded. 
  </p>
</trim>

<snippet id="demo-picture-srcset">
<picture>
  <source type="image/webp"
    srcset="@App.Path/img/assets/koi-img-srcset-2000.webp 2000w,
      @App.Path/img/assets/koi-img-srcset-1000.webp 1000w,
      @App.Path/img/assets/koi-img-srcset-500.webp 500w,
      @App.Path/img/assets/koi-img-srcset-250.webp 250w,"
    sizes="(max-width: 300px) 250px, (max-width: 600px) 500px, (max-width: 1200px) 1000px, 2000px">
  <source type="image/png"
    srcset="@App.Path/img/assets/jellyfish-img-srcset-2000.jpg 2000w,
      @App.Path/img/assets/jellyfish-img-srcset-1000.jpg 1000w,
      @App.Path/img/assets/jellyfish-img-srcset-500.jpg 500w,
      @App.Path/img/assets/jellyfish-img-srcset-250.jpg 250w,"
    sizes="(max-width: 300px) 250px, (max-width: 600px) 500px, (max-width: 1200px) 1000px, 2000px">
  <img class="img-fluid" src="@App.Path/img/assets/jellyfish-img-srcset-1000.jpg" alt="Picture srcset demo">
</picture>
</snippet>
<code id="demo-picture-srcset-label"></code>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "demo-picture-srcset", Size = 320 }) 
</hide-silent>

<hr>
<h2>Automatically Resized Files &amp Formats</h2>

<snippet id="pic-auto">
@Kit.Image.Picture(App.Path + "/img/assets/jellyfish-img-srcset-2000.jpg")
</snippet>
<code id="pic-auto-label"></code>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "pic-auto", Size = 100 }) 

<h6>This generates</h6>
@{ var previewTag = Kit.Image.Picture(App.Path + "/img/assets/jellyfish-img-srcset-2000.jpg"); }
@Html.Partial("../shared/_result.cshtml", PictureTagPreview(previewTag, 250))
</hide-silent>


<hr>
<h2>Automatically Resized With Custom Alt and Classes</h2>

<snippet id="pic-auto-alt-class">
@Kit.Image.Picture(App.Path + "/img/assets/jellyfish-img-srcset-2000.jpg", imgAlt: "This is the ALT text", imgClass: "dummy-class")
</snippet>
<code id="pic-auto-label"></code>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "pic-auto-alt-class", Size = 100 }) 

<h6>This generates</h6>
@{ previewTag = Kit.Image.Picture(App.Path + "/img/assets/jellyfish-img-srcset-2000.jpg", imgAlt: "This is the ALT text", imgClass: "dummy-class"); }
@Html.Partial("../shared/_result.cshtml", PictureTagPreview(previewTag, 250))
</hide-silent>

<hr>
<h2>Automatically Resized Bits with More Control</h2>
<snippet id="pic-auto-control1">
@{
  var picControlled = Kit.Image.Picture(App.Path + "/img/assets/jellyfish-img-srcset-2000.jpg");
}
<picture>
  @picControlled.Sources
  @picControlled.Img.Id("some-id").Style("width: 75%").Title("Mouseover this!")
</picture>
</snippet>
<br>
<code id="pic-auto-control1-label"></code>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "pic-auto-control1", Size = 160 }) 

  <h6>This generates</h6>
  @{ var previewString = "<picture>  " + picControlled.Sources.ToString() + "  " + picControlled.Img.Id("some-id").Style("width: 75%").Title("Mouseover this!").ToString() + "</picture>"; }
  @Html.Partial("../shared/_result.cshtml", PictureTagPreview(previewString, 250))
</hide-silent>

<hr>
<h2>Automatically Resized Bits with Lots of Control</h2>
<snippet id="pic-auto-control2">
@{
  var picFullControl = Kit.Image.Picture(App.Path + "/img/assets/jellyfish-img-srcset-2000.jpg");
}
<picture>
  @foreach(var st in picFullControl.Sources){
    @st
  }
  <img src='@picFullControl.Src' style='width: 50%' class='border border-primary'>
</picture>
</snippet>
<br>
<code id="pic-auto-control2-label"></code>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "pic-auto-control2", Size = 200 }) 

  <h6>This generates</h6>
  @{ 
    previewString = "<picture>  ";
    foreach(var st in picFullControl.Sources) { previewString += st.ToString(); }
    previewString += "<img src='" + picFullControl.Src + "' style='width: 50%' class='border border-primary'>";
    previewString += "</picture>";
  }
  @Html.Partial("../shared/_result.cshtml", PictureTagPreview(previewString, 250))
</hide-silent>
<hide>

<script>
  showChangingSrc('#demo-picture-formats img', '#demo-picture-formats-label');
  showChangingSrc('#demo-picture-srcset img', '#demo-picture-srcset-label');
  showChangingSrc('#pic-auto img', '#pic-auto-label');
  showChangingSrc('#pic-auto-control1 img', '#pic-auto-control1-label');
  showChangingSrc('#pic-auto-control2 img', '#pic-auto-control2-label');
</script>

<hide>
@Html.Partial("../shared/_PreCodeFooter.cshtml")
@Html.Partial("../shared/_source-code.cshtml", new { Path, Size = 1900 }) 
</hide>
