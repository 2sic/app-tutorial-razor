@inherits Custom.Hybrid.Razor14
<hide>
@Html.Partial("_header.cshtml")

@{  
  /* Internal remarks for the tutorial developers
    To reall see the images loading they must have different names in each tutorial.
    Otherwise some image is already loaded because of a different example, and the user won't see lazy-loading on resize.
  */
  var hlp = CreateInstance("../shared/Helpers.cs");
}
@functions {
  // Special helper to create the config object
  // Will also replace common things in the src-set
  object SrcSetTagPreview(object tag, int size) {
    return new { Path, Result = tag.ToString().Replace(" srcset", " \nsrcset").Replace(",", ",\n"), Size = size };
  }
}
</hide>

<trim>
  <div class="row">
    <div class="col-lg-7">
      <h1>Best-Possible Image for Every Screen &amp; Device</h1>
      <h2>...using <code>img</code> and <code>srcset</code></h2>
      <p>
        HTML has a few ways to show an image, and you should know which way is best. Discover: 
      </p>
      <ol>
        <li><code>img</code> for your standard image</li>
        <li>enhancing images with size-detection using <code>srcset</code> and <code>sizes</code></li>
      </ol>
    </div>
    @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  </div>
  <div class="alert alert-info">
    These examples are optimized. 
    The browser will only load new images, if they are larger than the previous one. 
    So to see the effect, you must make the browser very small (narrow), reload the page, and then drag it wider. 
    <br>
    <br>
    Some examples show the currently loaded URL below it, and the difference may be very small as it changes. So look closely üîç
  </div>
  @Html.Partial("../shared/_KitBaseClassInfoBox.cshtml", new { ServiceName = "Image", Service = "IImageService" })

  <hr>
  <h2>Responsive <code>img</code> with <code>srcset</code> and <code>sizes</code> To Load Different Pictures</h2>
  <p>
    With <code>srcset</code> on the <code>img</code> tag you can tell the browser to load different images based on screen size. 
    To really get the hang of this, best check out <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images" target="_blank">the MDN docs</a>.
  </p>


</trim>

<hide>
  <h3>What you need to know about <code>srcset</code></h3>
  <ol>
    <li>
      <strong>Important: </strong> If the browser already has a large image, it won't load smaller ones. 
      So to see this in action, you have to start with a tiny browser window, loading the 250px - then make it larger to see bigger pictures load. 
    </li>
    <li>The main picture in <code>src</code> is used in all old browsers</li>
    <li>You can also use <code>srcset</code> to specify different resolutions for retina displays.</li>
    <li><strong>Important: </strong> the width specified in the <code>max-width</code> is the view/page width, not the image width</li>
  </ol>
  <h3>Example with Different Files for Each Resolution</h3> 
</hide>

<snippet id="img-srcset">
<img class="img-fluid" alt="Image SrcSet Demo"
  src="@App.Path/img/assets/jellyfish-img-srcset-1000.jpg"
  srcset="@App.Path/img/assets/jellyfish-img-srcset-2000.jpg 2000w,
          @App.Path/img/assets/jellyfish-img-srcset-1000.jpg 1000w,
          @App.Path/img/assets/jellyfish-img-srcset-500.jpg 500w,
          @App.Path/img/assets/jellyfish-img-srcset-250.jpg 250w,">
</snippet>
<code id="img-srcset-label"></code>

<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "img-srcset", Size = 160 }) 
</hide-silent>

<h3>Example with Automatically Resized Files for Each Resolution</h3>

<snippet id="img-srcset-auto">
@{
  var tomatoPicUrl = App.Path +  "/img/assets/pexels-pixabay-533288.jpg";
}
@Kit.Image.Img(tomatoPicUrl)
</snippet>
<code id="img-srcset-auto-label"></code>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "img-srcset-auto", Size = 140 })
  
<h6>This generates</h6>
@{ var previewTag = Kit.Image.Img(tomatoPicUrl); }
@Html.Partial("../shared/_result.cshtml", SrcSetTagPreview(previewTag, 120))
</hide-silent>

<h3>Example with Automatic Resize and Special Settings</h3>
<p>
  The following example (and the ones after this) will use a flatter image to make it easier to see all the samples. 
  To achieve this, we must create <code>ResizeSettings</code> for this. It will be based on the default <code>Content</code> settings.
</p>
<snippet id="img-srcset-auto2">
@{
  var flatSettings = Kit.Image.Settings(Settings.Images.Content, aspectRatio: "8:1");
  // The following line uses the imgSvc (IImageService) created in the previous example
}
@Kit.Image.Img(tomatoPicUrl, settings: flatSettings)
</snippet>
<code id="img-srcset-auto2-label"></code>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "img-srcset-auto2", Size = 100 }) 
<h6>This generates</h6>
@{ previewTag = Kit.Image.Img(tomatoPicUrl, settings: flatSettings); }
@Html.Partial("../shared/_result.cshtml", SrcSetTagPreview(previewTag, 120))
</hide-silent>


<h3>Example with Automatic Resize and Special SrcSets</h3>
<p>
  The default settings contains a list of default resizes - which is why the examples before just worked. 
  You can also specify your own, according to the specs in the
  <a href="https://docs.2sxc.org/net-code/images/srcset.html" target="_blank">srcset docs</a>. 
</p>
<snippet id="img-srcset-auto-srcset">
@* The following line uses the imgSvc (IImageService) created in the previous example *@
@Kit.Image.Img(tomatoPicUrl, settings: flatSettings, recipe: "1600,1200,1000,900,800,700,600,500,400")
</snippet>
<code id="img-srcset-auto-srcset-label"></code>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "img-srcset-auto-srcset", Size = 100 }) 

<h6>This generates</h6>
@{ previewTag = Kit.Image.Img(tomatoPicUrl, settings: flatSettings, recipe: "1600,1200,1000,900,800,700,600,500,400"); }
@Html.Partial("../shared/_result.cshtml", SrcSetTagPreview(previewTag, 250))
</hide-silent>


<h3>Automatic Resize with Custom <code>alt</code> and <code>class</code> </h3>

<snippet id="img-srcset-auto3">
@* The following line uses the imgSvc (IImageService) created in the previous example *@
@Kit.Image.Img(tomatoPicUrl, settings: flatSettings,
  imgAlt: "SEO Text", imgClass: "border border-primary")
</snippet>
<code id="img-srcset-auto3-label"></code>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "img-srcset-auto3", Size = 100 }) 

<h6>This generates</h6>
@{ previewTag = Kit.Image.Img(tomatoPicUrl, settings: flatSettings, imgAlt: "SEO Text", imgClass: "border border-primary"); }
@Html.Partial("../shared/_result.cshtml", SrcSetTagPreview(previewTag, 250))
</hide-silent>


<h3>Automatic Resize with Detailed Control</h3>
<snippet id="img-srcset-auto4">
@{
  var imgControlled = Kit.Image.Img(tomatoPicUrl, settings: flatSettings);
}
@* The following line uses the imgSvc (IImageService) created in the previous example *@
@imgControlled.Img.Id("Some-Id").Style("Width: 75%")
</snippet><br>
<code id="img-srcset-auto4-label"></code>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "img-srcset-auto4", Size = 100 }) 

<h6>This generates</h6>
@{ previewTag = imgControlled; }
@Html.Partial("../shared/_result.cshtml", SrcSetTagPreview(previewTag, 250))
</hide-silent>


<h3>Automatic Resize with Full Control</h3>
<snippet id="img-srcset-auto5">
@{
  var imgFullControl = Kit.Image.Img(tomatoPicUrl, settings: flatSettings);
}
@* The following line uses the imgSvc (IImageService) created in the previous example *@
<img src="@imgFullControl.Src" srcset="@imgFullControl.SrcSet" title="Hover to see this">
</snippet>
<code id="img-srcset-auto5-label"></code>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "img-srcset-auto5", Size = 100 })

<h6>This generates the following Srcset</h6>
@{ var srcSetPreview = imgFullControl.SrcSet; }
@Html.Partial("../shared/_result.cshtml", new { Path, Result = srcSetPreview, Size = 200, Language = "text" })
</hide-silent>

<script>
  showChangingSrc("#img-srcset img", "#img-srcset-label")
  showChangingSrc('#img-srcset-auto img', '#img-srcset-auto-label');
  showChangingSrc('#img-srcset-auto-srcset img', '#img-srcset-auto-srcset-label');
  showChangingSrc('#img-srcset-auto2 img', '#img-srcset-auto2-label');
  showChangingSrc('#img-srcset-auto3 img', '#img-srcset-auto3-label');
  showChangingSrc('#img-srcset-auto4 img', '#img-srcset-auto4-label');
  showChangingSrc('#img-srcset-auto5 img', '#img-srcset-auto5-label');
</script>

@* 
Photo by <a href="https://unsplash.com/@dorianbaumann?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Dorian Baumann</a> on <a href="https://unsplash.com/s/photos/aescher?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>

Werdenberg: Photo by <a href="https://unsplash.com/@calina?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Georg Bommeli</a> on <a href="https://unsplash.com/s/photos/buchs-sg?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>

*@
  @Html.Partial("../shared/_PreCodeFooter.cshtml")
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Size = 2450 }) 

  <div class="alert alert-info">
    <strong>Credits: </strong>
    <ol>
      <li>
        Koi fish Photo by <a href="https://unsplash.com/@("@")agusprianto?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">agus prianto</a> on <a href="https://unsplash.com/s/photos/colorful-shrimp?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>
      </li>
      <li>
        Jellyfish Photo by <a href="https://unsplash.com/@("@")kkkaran?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Karan Karnik</a> on <a href="https://unsplash.com/s/photos/sea-life?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>
      </li>
    </ol>
  </div>
</hide>