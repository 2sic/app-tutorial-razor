@inherits Custom.Hybrid.Razor12
@using ToSic.Sxc.Services;
@{
  var imgSvc = GetService<IImageService>();
}
<hide>
@Html.Partial("_header.cshtml")
@{  
  /* Internal remarks for the tutorial developers
    To reall see the images loading they must have different names in each tutorial.
    Otherwise some image is already loaded because of a different example, and the user won't see lazy-loading on resize.
  */
}
</hide>

<trim>
  <h1>Use <code>img</code>, <code>srcset</code> and <code>picture</code></h1>
  <p>
    HTML has a few ways to show an image, and you should know which way is best. Discover: 
  </p>
  <ol>
    <li><code>img</code> for your standard image</li>
    <li>enhancing images with size-detection using <code>srcset</code> and <code>sizes</code></li>
    <li><code>picture</code> for images in different sizes, which the browser picks based on the screen and capabilities</li>
  </ol>

  <div class="alert alert-info">
    These examples are optimized. 
    The browser will only load new images, if they are larger than the previous one. 
    So to see the effect, you must make the browser vary small (narrow), reload the page, and then drag it wider. 
    <br>
    <br>
    Some examples show the currently loaded URL below it, and the difference may be very small as it changes. So look closely üîç
  </div>

  <hr>
  <h2>Responsive <code>img</code> with <code>srcset</code> and <code>sizes</code> To Load Different Pictures</h2>
  <p>
    With <code>srcset</code> on the <code>img</code> tag you can tell the browser to load different images based on screen size. 
    To really get the hang of this, best check out <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images" target="_blank">the MDN docs</a>.
  </p>


</trim>

<hide>
  <h3>What you need to know about <code>srcset</code></h3>
  <ol>
    <li>
      <strong>Important: </strong> If the browser already has a large image, it won't load smaller ones. 
      So to see this in action, you have to start with a tiny browser window, loading the 250px - then make it larger to see bigger pictures load. 
    </li>
    <li>The main picture in <code>src</code> is used in all old browsers</li>
    <li>You can also use <code>srcset</code> to specify different resolutions for retina displays.</li>
    <li><strong>Important: </strong> the width specified in the <code>max-width</code> is the view/page width, not the image width</li>
  </ol>
</hide>

<snippet id="img-srcset">
  <img class="img-fluid" alt="Image SrcSet Demo"
    src="@App.Path/img/assets/jellyfish-img-srcset-1000.jpg"
    srcset="@App.Path/img/assets/jellyfish-img-srcset-2000.jpg 2000w,
            @App.Path/img/assets/jellyfish-img-srcset-1000.jpg 1000w,
            @App.Path/img/assets/jellyfish-img-srcset-500.jpg 500w,
            @App.Path/img/assets/jellyfish-img-srcset-250.jpg 250w,">
  <code id="label"></code>
</snippet>

<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "img-srcset", Size = 160 }) 
</hide-silent>

... and here the automatic version with Image resizing
<snippet id="img-srcset-auto">
  @{
    var imgSet = imgSvc.Img(App.Path + "/img/assets/pexels-pixabay-533288.jpg");
    var imgSettings = imgSvc.ResizeSettings(Settings.Images.Content, height: 0);
  }
  @imgSvc.Img(App.Path + "/img/assets/pexels-pixabay-533288.jpg", settings: imgSettings, imgClass: "img-fluid")
  <code id="label"></code>
</snippet>



<hr>
Now picture 1

<snippet id="pic-auto">
@{
  var picSet = imgSvc.Picture(App.Path + "/img/assets/jellyfish-img-srcset-2000.jpg");
}
@picSet
<code id="label"></code>
</snippet>

<hr>
<h1>Picture detailed</h1>
<picture>
  @* @foreach(var st in picSet.SourceTags){
    @st
  } *@
  @picSet.SourceTags
  @picSet.ImgTag
</picture>

<script>
  function getbySelector(id) { return document.querySelector(id) };

  function showCurrentSrc(imgId, labelId) {
    const img = document.querySelector(imgId);
    getbySelector(labelId).innerHTML = 'CurrentSrc:' + img.currentSrc; 
  }
  
  function showChangingSrc(imgId, labelId) {
    showCurrentSrc(imgId, labelId);
    getbySelector(imgId).onload = function () { showCurrentSrc(imgId, labelId); }
  }
  showChangingSrc("#img-srcset img", "#img-srcset #label")
  showChangingSrc('#img-srcset-auto img', '#img-srcset-auto #label');
  showChangingSrc('#pic-auto img', '#pic-auto #label');
</script>

<hr>


<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "img-srcset-auto-snippet", Size = 160 }) 
</hide-silent>

<trim>
  <hr>
  <h2>Browser-Capabilities <code>picture</code> with different formats</h2>
  <p>
    The perfect image depends on browser capabilities. 
    The following example will get modern browsers a webp image (which is smaller/faster) and normal browsers a jpg. 
  </p>
</trim>

<hide>
  <h3>What you need to know about <code>picture</code></h3>
  <ol>
    <li>It's just a wrapper for the <code>img</code></li>
    <li>You always need an <code>img</code> tag inside it, and this is what old browsers like IE6 will take even if they don't understand <code>picture</code></li>
    <li>The <code>img</code> tag also caries the <code>alt</code> description, width, size, styles etc. which is used for all images</li>
    <li>The <code>source</code> tags contain rules like <code>type</code> or <code>media</code> which the browser uses to pick the best image</li>
    <li>The <code>source</code> also supports the same <code>srcset</code> and <code>sizes</code> just like the <code>img</code> tag</li>
    <li><strong>Important: </strong> you must use <code>srcset</code> and not <code>src</code> on the <code>source</code> tags</li>
    <li><strong>Important: </strong> Order matters! Put the <code>source</code> tags first in the order you need, as the first match will be taken.</li>
  </ol>
</hide>

Todo: 2mh - as described above you cannot use src on source-tags, you must use srcset - pls fix
<snippet id="demo-picture-formats">
  <picture>
    <source src="@App.Path/img/assets/jellyfish-2000.jpg" type="image/webp">
    <source src="@App.Path/img/assets/koi-400.png" type="image/png">
    <img style="width: 100%;" src="@App.Path/img/assets/jellyfish-1000.jpg">
  </picture>
</snippet>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "demo-picture-formats", Size = 120 }) 
</hide-silent>

<trim>
  <hr>
  <h2>Responsive <code>picture</code> with many resolutions</h2>
  <p>
    The perfect image is often different depending on the screen size. 
    The following example will get two different sizes, depending on the screen size. 
    Try resizing the screen and watch the network (F12) to see when the other sizes are loaded. 
  </p>
</trim>

<snippet id="demo-picture-srcset">
  <picture>
    <source type="image/webp"
            srcset="@App.Path/img/assets/koi-img-srcset-2000.webp 2000w,
              @App.Path/img/assets/koi-img-srcset-1000.webp 1000w,
              @App.Path/img/assets/koi-img-srcset-500.webp 500w,
              @App.Path/img/assets/koi-img-srcset-250.webp 250w,"
            sizes="(max-width: 300px) 250px, (max-width: 600px) 500px, (max-width: 1200px) 1000px, 2000px">
    <source type="image/png"
            srcset="@App.Path/img/assets/jellyfish-img-srcset-2000.jpg 2000w,
              @App.Path/img/assets/jellyfish-img-srcset-1000.jpg 1000w,
              @App.Path/img/assets/jellyfish-img-srcset-500.jpg 500w,
              @App.Path/img/assets/jellyfish-img-srcset-250.jpg 250w,"
            sizes="(max-width: 300px) 250px, (max-width: 600px) 500px, (max-width: 1200px) 1000px, 2000px">
    <img class="img-fluid" src="@App.Path/img/assets/jellyfish-img-srcset-1000.jpg" alt="Picture srcset demo">
  </picture>
</snippet>
<hide-silent> @* Show only this snippet *@
  @Html.Partial("../shared/_source-code.cshtml", new { Path, Snippet = "demo-picture-srcset", Size = 320 }) 
</hide-silent>


<hide>
  @* 
  Photo by <a href="https://unsplash.com/@dorianbaumann?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Dorian Baumann</a> on <a href="https://unsplash.com/s/photos/aescher?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>

  Werdenberg: Photo by <a href="https://unsplash.com/@calina?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Georg Bommeli</a> on <a href="https://unsplash.com/s/photos/buchs-sg?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>
  
  *@
@Html.Partial("../shared/_source-code.cshtml", new { Path, Size = 1200 }) 

  <div class="alert alert-info">
    <strong>Credits: </strong>
    <ol>
      <li>
        Koi fish Photo by <a href="https://unsplash.com/@("@")agusprianto?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">agus prianto</a> on <a href="https://unsplash.com/s/photos/colorful-shrimp?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>
      </li>
      <li>
        Jellyfish Photo by <a href="https://unsplash.com/@("@")kkkaran?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Karan Karnik</a> on <a href="https://unsplash.com/s/photos/sea-life?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>
      </li>
    </ol>
  </div>
</hide>