@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;
@using System.Linq;
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("_header.cshtml", new { Sys = Sys }) 
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
    <h2>Simple Sorting of Persons</h2>
  </div>


@Sys.SourceCode.SnippetInitStart("intro")
  @{
    var persons = AsList(App.Data["Persons"]);
  }
@Sys.SourceCode.SnippetInitEnd()


</div>
<h3>OrderBy(EntityId)</h3>
<p>This example shows A-Z ordering by a property which exists on all entities: EntityId</p>
@Sys.SourceCode.SnippetInlineStart("sort-by-id")
  <ol>
    @foreach (var person in persons.OrderBy(p => p.EntityId)) {
      <li>@person.FirstName @person.LastName (#@person.EntityId)</li>
    }
  </ol>
@Sys.SourceCode.SnippetInlineEnd()

<h3>OrderBy(FirstName)</h3>
<p>This example shows A-Z ordering by a property which exists only on Person-entities. This is simple with <code>dynamic</code> objects</p>

@Sys.SourceCode.SnippetInlineStart("sort-by-property")
  <ol>
    @foreach (var person in persons.OrderBy(p => p.FirstName)) {
      <li>@person.FirstName @person.LastName</li>
    }
  </ol>
@Sys.SourceCode.SnippetInlineEnd()


<h3>OrderByDescending(Birthday)</h3>
<p>This example shows Z-A ordering by a property.</p>

@Sys.SourceCode.SnippetInlineStart("sort-by-property")
  <ol>
    @foreach (var person in persons.OrderByDescending(p => p.Birthday)) {
      <li>@person.FirstName @person.LastName (@person.Birthday.ToString("d"))</li>
    }
  </ol>
@Sys.SourceCode.SnippetInlineEnd()


@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })