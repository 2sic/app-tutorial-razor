@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;
@using System.Linq;
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys }) 
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
    <h2>Simple Where(...) and Any()</h2>
  </div>
</div>


@Sys.SourceCode.SnippetInitStart("intro")
  @{
   var persons = AsList(App.Data["Persons"]);
  }
@Sys.SourceCode.SnippetInitEnd()


<h3>Where(FirstName == "Terry")</h3>
<p>This filters the authors to only find Terry.</p>

@Sys.SourceCode.SnippetInlineStart("linq-where-simple-1")
  <ol>
    @foreach (var person in persons.Where(p => p.FirstName == "Terry")) {
      <li>@person.FirstName @person.LastName</li>
    }
  </ol>
@Sys.SourceCode.SnippetInlineEnd()


<h3>Where(FirstName.Length > 5)</h3>
<p>This filters the authors with long first names.</p>

@Sys.SourceCode.SnippetInlineStart("linq-where-simple-2")
  <ol>
    @foreach (var person in persons.Where(p => p.FirstName.Length > 5)) {
      <li>@person.FirstName @person.LastName</li>
    }
  </ol>
@Sys.SourceCode.SnippetInlineEnd()


<h3>Any(FirstName.Length > 5 / 10)</h3>
<p>This filters the authors with long first names.</p>

@Sys.SourceCode.SnippetInlineStart("linq-any")
  <ol>
    <li>
      Persons with 5-char names or more: @persons.Any(p => p.FirstName.Length > 5)
    </li>
    <li>
      Persons with 10-char names or more: @persons.Any(p => p.FirstName.Length > 10)
    </li>
  </ol>
@Sys.SourceCode.SnippetInlineEnd()


@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })