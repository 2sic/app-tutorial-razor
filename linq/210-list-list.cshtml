@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;
@using System.Linq;
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys }) 
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
    <h2>Accessing Authors, a List inside of Books</h2>
  </div>
</div>


@Sys.SourceCode.SnippetInitStart("intro")
  @{
    var persons = AsList(App.Data["Persons"]);
    var books = AsList(App.Data["Books"]);
  }
@Sys.SourceCode.SnippetInitEnd()


<h3>Basic Use of List <code>book.Authors</code></h3>
<p>This example shows the books, and we want to LINQ on the Authors. We must tell the compiler it's a list, so that LINQ can use <code>Select(...)</code>.</p>

@Sys.SourceCode.SnippetInlineStart("list-dynamic")
  <ol>
    @foreach (var book in books) {
      // To work with a list coming off a dynamic object, we have to tell the compiler it's a dynamic list
      var authors = AsList(book.Authors as object)
        .Select(a => a.FirstName + " " + a.LastName);

      <li><strong>@book.Title</strong>
        by @string.Join(", ", authors.OrderBy(ln => ln)) 
      </li>
    }
  </ol>
@Sys.SourceCode.SnippetInlineEnd()


<h3>OrderBy and OrderByDescending with Amount of Authors</h3>
<p>This example shows Z-A ordering, where we count the authors to sort.</p>

@Sys.SourceCode.SnippetInlineStart("list-advanced")
  <ol>
    @foreach (var book in books.OrderByDescending(p => p.Authors.Count)) {
      var authors = AsList(book.Authors as object).Select(a => a.FirstName + " " + a.LastName);
      <li><strong>@book.Title</strong> 
        by @string.Join(",", authors.OrderBy(ln => ln)) (@book.Authors.Count author) 
      </li>
    }
  </ol>
@Sys.SourceCode.SnippetInlineEnd()


@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })