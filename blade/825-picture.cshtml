@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = GetCode("/shared/Helpers.cs").Init(this); }
  @{ dynamic snip = null;}
  @Html.Partial("header.cshtml", new { Sys = Sys })
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
      <h2><em>RazorBlade</em> Fluent Tag API <code>@@Tag.Picture()</code> with many sources <em>v3</em></h2>
      <div>
        <code>picture</code> tags are the future of <code>img</code> tags. But it can be messy to create them, so here goes ðŸ˜‰. 
        This example will return a small image if your screen is small, a large one otherwise. Try resizing the width of your browser to test. The image will become blurry if the browser is less than 800px wide.
      </div>
    </div>
  </div>


@((snip = Sys.SourceCode.Intro()).SnipStart())
  @{
    var path = App.Path + "/blade/assets/tag-img/";
    var small = "Ã¼berschrift-small.png";
    var large = "Ã¼berschrift-large.png";
  }
@snip.SnipEnd()

@((snip = Sys.SourceCode.OutputBoxAndSnippet()).SnipStart())
  @Tag.Picture(
  Tag.Source().Srcset(path + large).Media("(min-width: 800px)"),
  Tag.Img().Src(path + small))
@snip.SnipEnd()

@((snip = Sys.SourceCode.OutputBoxAndSnippet()).SnipStart())
  <pre>@Tag.Picture(
    Tag.Source().Srcset(path + large).Media("(min-width: 800px)"),
    Tag.Img().Src(path + small)).ToString()
  </pre>
@snip.SnipEnd()


<hide>
<style>
  picture, picture source, picture img {
    width: 100%;
  }
</style>
</hide>

@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })