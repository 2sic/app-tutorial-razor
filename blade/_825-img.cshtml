@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("_header.cshtml", new { Sys = Sys })
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
      <h2><em>RazorBlade</em> Fluent Tag API <code>@@Tag.Img().Src(...)</code> and <code>Srcset(...)</code> <em>v3</em></h2>
      <div>
        One of the magic bits of the Html5 tags is that they are smart. For example, url properties like <code>Src()</code> or <code>Href()</code> will safely encode if they are not yet encoded. 
        This is super important for CMS solutions where the image file may easily contain umlaut characters or spaces. <br>
        <em>Note that it's <code>Srcset()</code> and not <code>SrcSet</code>. For consistency, everything is always lower case. </em>
      </div>
    </div>
  </div>


@Sys.SourceCode.SnippetInitStart("intro")
  @{
    // demo of path with umlauts and japanese characters
    var kaizenUrl = "überschrift-small.png?name=改善";
    var path = App.Path + "/blade/assets/tag-img/";
    var kaizenFullPath =  path + kaizenUrl;
    var kaizenFullHd = kaizenFullPath.Replace("small", "large");
  }
@Sys.SourceCode.SnippetInitEnd()


This file is called @kaizenUrl <br>

@Sys.SourceCode.SnippetInlineStart("blade-img")
  @Tag.Img().Src(kaizenFullPath)
@Sys.SourceCode.SnippetInlineEnd()


@Sys.SourceCode.SnippetInlineStart("blade-img-pre")
 <pre>@Tag.Img().Src(kaizenFullPath).ToString()</pre>
@Sys.SourceCode.SnippetInlineEnd()

And now the same thing with <code>Srcset</code> which allows high-density images: <br>

@Sys.SourceCode.SnippetInlineStart("blade-img-p")
 @Tag.Img().Srcset(kaizenFullPath, 1).Srcset(kaizenFullHd, 2)
@Sys.SourceCode.SnippetInlineEnd()


@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })