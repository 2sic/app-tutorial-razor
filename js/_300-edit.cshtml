@using ToSic.Razor.Blade;
@inherits Custom.Hybrid.Razor14
@{
  // Tell the page that we need the 2sxc Js APIs
  Kit.Page.Activate("2sxc.JsCore"); 
  var randomName = "SuperPoet " + new Random().Next(1000);
}
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("_header.cshtml", new { Sys = Sys })
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
      <h2>Use the sxc data API to create/edit/delete data</h2>
      <p>This page uses the sxc data API to create data for the backend.</p>
      <br>
      In this tutorial you'll learn how to:
      <ul>
        <li>Create data using the <code>.create(...)</code> method</li>
        <li>Update data using the <code>.update(...)</code> method</li>
        <li>Delete data using the <code>.delete(...)</code> method</li>
      </ul>
      <br>
      Look at the content below to see the effect.
    </div>
  </div>


@Sys.SourceCode.ResultStart("turn-on-demo", "Source of edit.js")
  <table id="example-content" class="table">
    <trim>
      <thead>
        <tr>
          <th>Name</th>
          <th>Birth date</th>
          <th>Poems</th>
          <th>Actions</th>
        </tr>
      </thead>
    </trim>
    <tbody>
      @foreach (var poet in AsList(App.Data["PoetsToEdit"])) {
        <tr>
          <td>@poet.Name</td>
          <td>@poet.BirthDate.ToShortDateString()</td>
          <td data-poet="@poet.EntityId">@poet.Poems</td>
          <td>
            <button type="button" class="btn btn-primary" onclick="window.editPoets.updateCount(@poet.EntityId)">Update Poems</button>
            <button type="button" class="btn btn-primary" onclick="window.editPoets.delete(@poet.EntityId)">Delete Poet</button>
          </td>
        </tr>
      }
    </tbody>
  </table>

  <div class="row">
    <div class="col-md-3">
      <input id="name" class="form-control" placeholder="Name" value="@randomName">
    </div>
    <div class="col-md-3">
      <input type="date" id="birthdate" class="form-control" min="1938-01-01" max="1949-01-01" placeholder="Birthdate" value="2021-01-01">
    </div>
    <div class="col-md-3">
      <input type="number" id="poems" min="0" class="form-control" placeholder="Poems" value="@(new Random().Next(999))">
    </div>
    <button type="button" class="btn btn-primary" onclick="window.editPoets.add()" >Add poet</button>
  </div>

  @* This tutorial uses turnOn, see turnOn tutorials *@
  @{ Kit.Page.Activate("turnOn"); }
  <turnOn turn-on='{ "run": "window.editPoets.init()", "data": { "moduleId": "@CmsContext.Module.Id" } }'></turnOn>
  <script src="@App.Path/js/_300-edit.js"></script>
@Sys.SourceCode.ResultEnd("file:_300-edit.js")


@Sys.PageParts.FooterWithSource()

