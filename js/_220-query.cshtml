@using ToSic.Razor.Blade;
@inherits Custom.Hybrid.Razor14
@{
  // Tell the page that we need the 2sxc Js APIs
  Kit.Page.Activate("2sxc.JsCore"); 
}
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("_header.cshtml", new { Sys = Sys })
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
      <h2>Use the sxc <code>query(...)</code> API to get Queries in JS</h2>
      <p>
        This page uses the sxc data API to get data from the backend and display it in a table with JavaScript.
        <br>
        In this tutorial you'll learn how to:
      </p>

      <ul>
        <li>
          Create a $2sxc object using the current Module Id
        </li>
        <li>
          Create a Query service using the <code>.query(...)</code>.
        </li>
        <li>
          Read data using <code>getAll()</code>, <code>getStream(...)</code> and <code>getStreams(...)</code>
        </li>
      </ul>
      <p>
        Note that this sample will run the query <code>RandomAuthorWithBooks</code>. There are some things which you should know:
      </p>
      <ol>
        <li>The Query has permissions configured to allow viewers to use the query in JS. </li>
        <li>Each call returns a random author with his books, so sometimes the books-list may be empty</li>
      </ol>
    </div>
  </div>


@Sys.SourceCode.ResultAndSnippetStart("turn-on-demo", "Source of query.js")
  <button id="mod-@CmsContext.Module.Id-load-all" type="button" class="btn btn-primary">Get entire Query</button>
  <button id="mod-@CmsContext.Module.Id-author" type="button" class="btn btn-primary">Get Stream <code>Author</code></button>
  <button id="mod-@CmsContext.Module.Id-streams" type="button" class="btn btn-primary">Get Streams <code>Author</code> and <code>Books</code></button>

  @* This tutorial uses turnOn, see turnOn tutorials *@
  @{ Kit.Page.Activate("turnOn"); }
  <turnOn turn-on='{ "run": "window.tutQuery.init()", "data": { "moduleId": "@CmsContext.Module.Id" } }'></turnOn>

  <script src="@App.Path/js/_220-query.js"></script>
@Sys.SourceCode.ResultEnd("file:_220-query.js")


@Sys.PageParts.FooterWithSource()

