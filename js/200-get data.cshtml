@using ToSic.Razor.Blade;
@inherits Custom.Hybrid.Razor14
@{
  // Tell the page that we need the 2sxc Js APIs
  Kit.Page.Activate("2sxc.JsCore"); 
}
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("header.cshtml", new { Sys = Sys })
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
      <h2>Use the sxc data API to get backend data</h2>
      <p>This page uses the sxc data API to get data from the backend and display it in a table with JavaScript.</p>
      <br>
      In this tutorial you'll learn how to:
      <ul>
        <li>
          Create a <code>$2sxc</code> object using the current Module Id
        </li>
        <li>
          Use the correct data source using <code>.data()</code>
        </li>
        <li>
          Read data using the <code>.getOne(id)</code> query method
        </li>
        <li>
          Read data using the <code>.getAll()</code> query method
        </li>
      </ul>
      <br>
      Look at the content below to see the effect. 
    </div>
  </div>


@Sys.SourceCode.ResultAndSnippetStart("turn-on-demo", "Source of get-data.js")
  <table id="example-content" class="table">
    <thead>
      <tr>
        <th>Name</th>
        <th>Birthdate</th>
        <th>Poems</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>
  @* This tutorial uses turnOn, see turnOn tutorials *@
  @{
    // Use the PageService to activate turnOn
    Kit.Page.Activate("turnOn");
  }
  <turnOn turn-on='{ "run": "window.sxcDataTutorial200.init()", "data": { "moduleId": "@CmsContext.Module.Id" } }'></turnOn>

  <script src="@App.Path/js/200-get-data.js" @Kit.Page.AssetAttributes()></script>
@Sys.SourceCode.ResultEnd("file:200-get-data.js")


@* Footer *@
@Html.Partial("../Shared/Layout/FooterWithSource.cshtml", new { Sys = Sys })

