@using ToSic.Razor.Blade;
@inherits Custom.Hybrid.Razor14
@{
  // Tell the page that we need the 2sxc Js APIs
  Kit.Page.Activate("2sxc.JsCore"); 
  var demoAuthorId = AsList(Data["RandomAuthor"]).FirstOrDefault().EntityId;
}
<hide>
  @* Sys must always be an exact copy of this line, so that we could search/replace *@
  @{ var Sys = CreateInstance("../shared/Helpers.cs").Init(this); }
  @Html.Partial("_header.cshtml", new { Sys = Sys })
</hide>


<div @Sys.PageParts.InfoWrapper()>
  @Html.Partial("../shared/_DefaultInfoSection.cshtml")
  <div @Sys.PageParts.InfoIntro()>
      <h2>Use the sxc <code>query(...)</code> API to get Queries in JS</h2>
      <p>
        This page uses the sxc data API to query data from the backend using parameters and display it in a table with JavaScript.
        <br>
        In this tutorial you'll learn how to:
      </p>

      <ul>
        <li>
          Create a $2sxc object using the current Module Id
        </li>
        <li>
          Create a Query service using the <code>.query(...)</code>.
        </li>
        <li>
          Add Parameters to the <code>.getAll(...)</code>, <code>.getStream(...)</code> and <code>.getStreams(...)</code> query methods through object or string
        </li>
      </ul>
      <p>
        Note that this sample will run the query <code>AuthorsWithBooks</code>.
      </p>
    </div>
  </div>


@Sys.SourceCode.ResultAndSnippetStart("turn-on-demo", "Source of query-parameters.js")
  <button id="mod-@CmsContext.Module.Id-object" type="button" class="btn btn-primary">Get Query with parameters (object)</button>
  <button id="mod-@CmsContext.Module.Id-string" type="button" class="btn btn-primary">Get Query with parameters (string)</button>
  <button id="mod-@CmsContext.Module.Id-stream-params" type="button" class="btn btn-primary">Get Query Stream with parameters</button>
  <button id="mod-@CmsContext.Module.Id-streams-params" type="button" class="btn btn-primary">Get Query Streams with parameters</button>

  @* This tutorial uses turnOn, see turnOn tutorials *@
  @{ Kit.Page.Activate("turnOn"); }
  <turnOn turn-on='{ 
    "run": "window.tutQueryParameters.init()", 
    "data": { "moduleId": "@CmsContext.Module.Id", "demoAuthorId": "@demoAuthorId" } }'>
  </turnOn>

  <script src="@App.Path/js/_230-query-parameters.js"></script>
@Sys.SourceCode.ResultEnd("file:_230-query-parameters.js")


@Sys.PageParts.FooterWithSource()
